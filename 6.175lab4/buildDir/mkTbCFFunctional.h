/*
 * Generated by Bluespec Compiler, version 2024.01-20-g9a97f9d0 (build 9a97f9d0)
 * 
 * On Fri Aug 16 18:13:33 CST 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTbCFFunctional_h__
#define __mkTbCFFunctional_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbCFFunctional module */
class MOD_mkTbCFFunctional : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_fifo_clear_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_clear_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_clear_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_clear_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_clear_ehr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_clear_ehr_wires_0;
  MOD_Wire<tUInt8> INST_fifo_clear_ehr_wires_1;
  MOD_Reg<tUInt8> INST_fifo_data_0;
  MOD_Reg<tUInt8> INST_fifo_data_1;
  MOD_Reg<tUInt8> INST_fifo_data_2;
  MOD_Reg<tUInt8> INST_fifo_deqP;
  MOD_Reg<tUInt8> INST_fifo_deq_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_fifo_deq_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_fifo_deq_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_deq_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_deq_ehr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_fifo_deq_ehr_wires_0;
  MOD_Wire<tUInt8> INST_fifo_deq_ehr_wires_1;
  MOD_Reg<tUInt8> INST_fifo_empty;
  MOD_Reg<tUInt8> INST_fifo_enqP;
  MOD_Reg<tUInt32> INST_fifo_enq_ehr_ehrReg;
  MOD_Wire<tUInt32> INST_fifo_enq_ehr_ignored_wires_0;
  MOD_Wire<tUInt32> INST_fifo_enq_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_fifo_enq_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_fifo_enq_ehr_virtual_reg_1;
  MOD_Wire<tUInt32> INST_fifo_enq_ehr_wires_0;
  MOD_Wire<tUInt32> INST_fifo_enq_ehr_wires_1;
  MOD_Reg<tUInt8> INST_fifo_full;
  MOD_Reg<tUInt32> INST_m_cycle;
  MOD_Reg<tUInt32> INST_m_input_count;
  MOD_Reg<tUInt32> INST_m_output_count;
  MOD_Wire<tUInt8> INST_m_randomA_ignore;
  MOD_Reg<tUInt8> INST_m_randomA_initialized;
  MOD_Wire<tUInt8> INST_m_randomA_zaz;
  MOD_Wire<tUInt8> INST_m_randomB_ignore;
  MOD_Reg<tUInt8> INST_m_randomB_initialized;
  MOD_Wire<tUInt8> INST_m_randomB_zaz;
  MOD_Wire<tUInt8> INST_m_randomC_ignore;
  MOD_Reg<tUInt8> INST_m_randomC_initialized;
  MOD_Wire<tUInt8> INST_m_randomC_zaz;
  MOD_Wire<tUInt8> INST_m_randomData_ignore;
  MOD_Reg<tUInt8> INST_m_randomData_initialized;
  MOD_Wire<tUInt8> INST_m_randomData_zaz;
  MOD_Reg<tUInt32> INST_m_ref_fifo_ehrReg;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_3;
  MOD_Reg<tUInt8> INST_m_ref_fifo_ehrReg_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_0_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_1_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_ignored_wires_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_ignored_wires_2_1;
  MOD_Fifo<tUInt8> INST_m_ref_fifo_ref_noncf_fifo;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_3;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_0_4;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_1;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_3;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_1_4;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_2;
  MOD_Reg<tUInt8> INST_m_ref_fifo_virtual_reg_2_1;
  MOD_Wire<tUInt32> INST_m_ref_fifo_wires_0;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_0_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_wires_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_1;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_3;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_1_4;
  MOD_Wire<tUInt32> INST_m_ref_fifo_wires_2;
  MOD_Wire<tUInt8> INST_m_ref_fifo_wires_2_1;
 
 /* Constructor */
 public:
  MOD_mkTbCFFunctional(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_m_cycle_inc;
  tUInt8 DEF_CAN_FIRE_RL_m_cycle_inc;
  tUInt8 DEF_WILL_FIRE_RL_m_stop_tb;
  tUInt8 DEF_CAN_FIRE_RL_m_stop_tb;
  tUInt8 DEF_WILL_FIRE_RL_m_check_fifos_first;
  tUInt8 DEF_CAN_FIRE_RL_m_check_fifos_first;
  tUInt8 DEF_WILL_FIRE_RL_m_check_fifos_not_empty;
  tUInt8 DEF_CAN_FIRE_RL_m_check_fifos_not_empty;
  tUInt8 DEF_WILL_FIRE_RL_m_check_fifos_not_full;
  tUInt8 DEF_CAN_FIRE_RL_m_check_fifos_not_full;
  tUInt8 DEF_WILL_FIRE_RL_m_check_outputs;
  tUInt8 DEF_CAN_FIRE_RL_m_check_outputs;
  tUInt8 DEF_WILL_FIRE_RL_m_feed_inputs;
  tUInt8 DEF_CAN_FIRE_RL_m_feed_inputs;
  tUInt8 DEF_WILL_FIRE_RL_m_init;
  tUInt8 DEF_CAN_FIRE_RL_m_init;
  tUInt8 DEF_WILL_FIRE_RL_m_cycle_print;
  tUInt8 DEF_CAN_FIRE_RL_m_cycle_print;
  tUInt8 DEF_WILL_FIRE_RL_m_randomData_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomData_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomData_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomData_every;
  tUInt8 DEF_WILL_FIRE_RL_m_randomC_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomC_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomC_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomC_every;
  tUInt8 DEF_WILL_FIRE_RL_m_randomB_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomB_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomB_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomB_every;
  tUInt8 DEF_WILL_FIRE_RL_m_randomA_every_1;
  tUInt8 DEF_CAN_FIRE_RL_m_randomA_every_1;
  tUInt8 DEF_WILL_FIRE_RL_m_randomA_every;
  tUInt8 DEF_CAN_FIRE_RL_m_randomA_every;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_post_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_post_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_pre_canonicalize_two;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_pre_canonicalize_two;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_pre_canonicalize_one;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_pre_canonicalize_one;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_4;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_4;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_3;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_3;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_2;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_2;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize_1;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize_1;
  tUInt8 DEF_WILL_FIRE_RL_m_ref_fifo_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_ref_fifo_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_canocalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_canocalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_clear_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_clear_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_deq_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_deq_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_fifo_enq_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_fifo_enq_ehr_canonicalize;
  tUInt8 DEF_fifo_empty__h4604;
  tUInt8 DEF_fifo_full__h3990;
  tUInt8 DEF_m_ref_fifo_virtual_reg_2_read____d147;
  tUInt8 DEF_m_ref_fifo_virtual_reg_1_read____d148;
  tUInt32 DEF_x__h16877;
  tUInt32 DEF_x__h17024;
  tUInt32 DEF_m_ref_fifo_wires_0_wget____d107;
  tUInt32 DEF_m_ref_fifo_ehrReg___d108;
  tUInt8 DEF_x_wget__h14184;
  tUInt8 DEF_x_wget__h13808;
  tUInt8 DEF_m_ref_fifo_wires_0_1_wget____d117;
  tUInt8 DEF_m_ref_fifo_ehrReg_1___d118;
  tUInt8 DEF_m_ref_fifo_ehrReg_4__h10969;
  tUInt8 DEF_m_ref_fifo_ehrReg_3__h10140;
  tUInt8 DEF_m_ref_fifo_virtual_reg_2_1_read____d158;
  tUInt8 DEF_m_ref_fifo_virtual_reg_1_1_read____d159;
  tUInt8 DEF_m_ref_fifo_wires_0_1_whas____d116;
  tUInt8 DEF_m_ref_fifo_wires_0_whas____d106;
  tUInt8 DEF_m_ref_fifo_ehrReg_08_BIT_8___d151;
  tUInt8 DEF_m_ref_fifo_wires_0_wget__07_BIT_8___d149;
  tUInt8 DEF_m_ref_fifo_ehrReg_1_18_BIT_1___d162;
  tUInt8 DEF_m_ref_fifo_wires_0_1_wget__17_BIT_1___d160;
  tUInt8 DEF_v__h14314;
  tUInt8 DEF_v__h13938;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_4_whas__38_THEN_m_ref_fi_ETC___d141;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_3_whas__31_THEN_m_ref_fi_ETC___d134;
  tUInt8 DEF_m_input_count_24_EQ_1024___d262;
  tUInt8 DEF_IF_m_randomB_zaz_whas__97_THEN_m_randomB_zaz_w_ETC___d230;
  tUInt8 DEF_IF_m_randomA_zaz_whas__90_THEN_m_randomA_zaz_w_ETC___d216;
  tUInt8 DEF_NOT_m_ref_fifo_virtual_reg_1_4_read__31_32_AND_ETC___d233;
  tUInt8 DEF_NOT_fifo_empty_9___d50;
  tUInt8 DEF_NOT_m_ref_fifo_virtual_reg_1_3_read__17_18_AND_ETC___d219;
  tUInt8 DEF_NOT_fifo_full_4___d35;
 
 /* Local definitions */
 private:
  tUInt8 DEF_x__h16059;
  tUInt32 DEF_v__h14992;
  tUInt32 DEF_v__h14615;
  tUInt32 DEF_v__h14241;
  tUInt32 DEF_v__h13865;
  tUInt32 DEF_x__h16509;
  tUInt32 DEF_fifo_enq_ehr_wires_0_wget____d4;
  tUInt32 DEF_fifo_enq_ehr_ehrReg___d5;
  tUInt8 DEF_x_wget__h14935;
  tUInt8 DEF_x_wget__h8728;
  tUInt8 DEF_def__h16392;
  tUInt8 DEF__read__h230;
  tUInt8 DEF__read__h204;
  tUInt8 DEF__read__h178;
  tUInt8 DEF_fifo_clear_ehr_wires_0_wget____d18;
  tUInt8 DEF_fifo_clear_ehr_ehrReg___d19;
  tUInt8 DEF_fifo_deq_ehr_wires_0_wget____d11;
  tUInt8 DEF_fifo_deq_ehr_ehrReg___d12;
  tUInt8 DEF_fifo_clear_ehr_wires_0_whas____d17;
  tUInt8 DEF_fifo_deq_ehr_wires_0_whas____d10;
  tUInt8 DEF_fifo_enq_ehr_wires_0_whas____d3;
  tUInt8 DEF_y__h16794;
  tUInt32 DEF_IF_m_ref_fifo_wires_0_whas__06_THEN_m_ref_fifo_ETC___d109;
  tUInt32 DEF_IF_fifo_enq_ehr_wires_0_whas_THEN_fifo_enq_ehr_ETC___d6;
  tUInt8 DEF_x_first__h13507;
  tUInt8 DEF_def__h9216;
  tUInt8 DEF_v__h15065;
  tUInt8 DEF_IF_m_ref_fifo_wires_0_1_whas__16_THEN_m_ref_fi_ETC___d119;
  tUInt8 DEF_IF_fifo_clear_ehr_wires_0_whas__7_THEN_fifo_cl_ETC___d20;
  tUInt8 DEF_IF_fifo_deq_ehr_wires_0_whas__0_THEN_fifo_deq__ETC___d13;
  tUInt32 DEF__0_CONCAT_DONTCARE___d100;
  tUInt8 DEF__0_CONCAT_DONTCARE___d101;
 
 /* Rules */
 public:
  void RL_fifo_enq_ehr_canonicalize();
  void RL_fifo_deq_ehr_canonicalize();
  void RL_fifo_clear_ehr_canonicalize();
  void RL_fifo_canocalize();
  void RL_m_ref_fifo_canonicalize();
  void RL_m_ref_fifo_canonicalize_1();
  void RL_m_ref_fifo_canonicalize_2();
  void RL_m_ref_fifo_canonicalize_3();
  void RL_m_ref_fifo_canonicalize_4();
  void RL_m_ref_fifo_pre_canonicalize_one();
  void RL_m_ref_fifo_pre_canonicalize_two();
  void RL_m_ref_fifo_post_canonicalize();
  void RL_m_randomA_every();
  void RL_m_randomA_every_1();
  void RL_m_randomB_every();
  void RL_m_randomB_every_1();
  void RL_m_randomC_every();
  void RL_m_randomC_every_1();
  void RL_m_randomData_every();
  void RL_m_randomData_every_1();
  void RL_m_cycle_print();
  void RL_m_init();
  void RL_m_feed_inputs();
  void RL_m_check_outputs();
  void RL_m_check_fifos_not_full();
  void RL_m_check_fifos_not_empty();
  void RL_m_check_fifos_first();
  void RL_m_stop_tb();
  void RL_m_cycle_inc();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbCFFunctional &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbCFFunctional &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbCFFunctional &backing);
};

#endif /* ifndef __mkTbCFFunctional_h__ */
