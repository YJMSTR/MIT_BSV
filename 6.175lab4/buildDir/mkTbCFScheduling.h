/*
 * Generated by Bluespec Compiler, version 2024.01-20-g9a97f9d0 (build 9a97f9d0)
 * 
 * On Fri Aug 16 18:13:35 CST 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTbCFScheduling_h__
#define __mkTbCFScheduling_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbCFScheduling module */
class MOD_mkTbCFScheduling : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_m_cycle;
  MOD_Reg<tUInt8> INST_m_fifo_1_clear_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_clear_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_clear_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_clear_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_clear_ehr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_clear_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_clear_ehr_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqP;
  MOD_Reg<tUInt8> INST_m_fifo_1_deq_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_deq_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_deq_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_deq_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_deq_ehr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_deq_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_deq_ehr_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqP;
  MOD_Reg<tUInt32> INST_m_fifo_1_enq_ehr_ehrReg;
  MOD_Wire<tUInt32> INST_m_fifo_1_enq_ehr_ignored_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_1_enq_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_enq_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_enq_ehr_virtual_reg_1;
  MOD_Wire<tUInt32> INST_m_fifo_1_enq_ehr_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_1_enq_ehr_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_full;
  MOD_Reg<tUInt8> INST_m_fifo_2_clear_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_clear_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_clear_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_clear_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_clear_ehr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_clear_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_clear_ehr_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqP;
  MOD_Reg<tUInt8> INST_m_fifo_2_deq_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_deq_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_deq_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_deq_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_deq_ehr_virtual_reg_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_deq_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_deq_ehr_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqP;
  MOD_Reg<tUInt32> INST_m_fifo_2_enq_ehr_ehrReg;
  MOD_Wire<tUInt32> INST_m_fifo_2_enq_ehr_ignored_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_2_enq_ehr_ignored_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_enq_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_enq_ehr_virtual_reg_1;
  MOD_Wire<tUInt32> INST_m_fifo_2_enq_ehr_wires_0;
  MOD_Wire<tUInt32> INST_m_fifo_2_enq_ehr_wires_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_full;
 
 /* Constructor */
 public:
  MOD_mkTbCFScheduling(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_m_cycle_stuff;
  tUInt8 DEF_CAN_FIRE_RL_m_cycle_stuff;
  tUInt8 DEF_WILL_FIRE_RL_m_enq_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_enq_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_deq_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_deq_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_deq_fifo_1;
  tUInt8 DEF_CAN_FIRE_RL_m_deq_fifo_1;
  tUInt8 DEF_WILL_FIRE_RL_m_enq_fifo_1;
  tUInt8 DEF_CAN_FIRE_RL_m_enq_fifo_1;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_canocalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_canocalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_clear_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_clear_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_deq_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_deq_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_enq_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_enq_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_canocalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_canocalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_clear_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_clear_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_deq_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_deq_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_enq_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_enq_ehr_canonicalize;
 
 /* Local definitions */
 private:
  tUInt8 DEF_m_fifo_2_empty__h10338;
  tUInt8 DEF_m_fifo_2_full__h9724;
  tUInt8 DEF_x__h15429;
  tUInt8 DEF_m_fifo_1_empty__h4653;
  tUInt8 DEF_m_fifo_1_full__h4039;
  tUInt8 DEF_x__h14707;
  tUInt32 DEF_m_fifo_2_enq_ehr_wires_0_wget____d105;
  tUInt32 DEF_m_fifo_2_enq_ehr_ehrReg___d106;
  tUInt32 DEF_m_fifo_1_enq_ehr_wires_0_wget____d4;
  tUInt32 DEF_m_fifo_1_enq_ehr_ehrReg___d5;
  tUInt8 DEF_m_fifo_2_clear_ehr_wires_0_wget____d119;
  tUInt8 DEF_m_fifo_2_clear_ehr_ehrReg___d120;
  tUInt8 DEF_m_fifo_2_deq_ehr_wires_0_wget____d112;
  tUInt8 DEF_m_fifo_2_deq_ehr_ehrReg___d113;
  tUInt8 DEF_m_fifo_1_clear_ehr_wires_0_wget____d18;
  tUInt8 DEF_m_fifo_1_clear_ehr_ehrReg___d19;
  tUInt8 DEF_m_fifo_1_deq_ehr_wires_0_wget____d11;
  tUInt8 DEF_m_fifo_1_deq_ehr_ehrReg___d12;
  tUInt8 DEF_x_wget__h12906;
  tUInt8 DEF_def__h16186;
  tUInt8 DEF_x_wget__h11810;
  tUInt8 DEF_def__h14975;
  tUInt8 DEF_m_fifo_2_clear_ehr_wires_0_whas____d118;
  tUInt8 DEF_m_fifo_2_deq_ehr_wires_0_whas____d111;
  tUInt8 DEF_m_fifo_2_enq_ehr_wires_0_whas____d104;
  tUInt8 DEF_m_fifo_1_clear_ehr_wires_0_whas____d17;
  tUInt8 DEF_m_fifo_1_deq_ehr_wires_0_whas____d10;
  tUInt8 DEF_m_fifo_1_enq_ehr_wires_0_whas____d3;
  tUInt8 DEF_m_fifo_2_ehr_virtual_reg_2_read____d238;
  tUInt8 DEF_m_fifo_2_ehr_virtual_reg_1_read____d239;
  tUInt8 DEF_m_fifo_1_ehr_virtual_reg_2_read____d221;
  tUInt8 DEF_m_fifo_1_ehr_virtual_reg_1_read____d222;
  tUInt32 DEF_IF_m_fifo_2_enq_ehr_wires_0_whas__04_THEN_m_fi_ETC___d107;
  tUInt32 DEF_IF_m_fifo_1_enq_ehr_wires_0_whas_THEN_m_fifo_1_ETC___d6;
  tUInt8 DEF_def__h13706;
  tUInt8 DEF_def__h12610;
  tUInt8 DEF_IF_m_fifo_2_clear_ehr_wires_0_whas__18_THEN_m__ETC___d121;
  tUInt8 DEF_IF_m_fifo_2_deq_ehr_wires_0_whas__11_THEN_m_fi_ETC___d114;
  tUInt8 DEF_IF_m_fifo_1_clear_ehr_wires_0_whas__7_THEN_m_f_ETC___d20;
  tUInt8 DEF_IF_m_fifo_1_deq_ehr_wires_0_whas__0_THEN_m_fif_ETC___d13;
  tUInt32 DEF__0_CONCAT_DONTCARE___d100;
  tUInt8 DEF__0_CONCAT_DONTCARE___d101;
  tUInt8 DEF_NOT_m_fifo_2_full_35___d136;
  tUInt8 DEF_NOT_m_fifo_2_empty_50___d151;
  tUInt8 DEF_NOT_m_fifo_1_empty_9___d50;
  tUInt8 DEF_NOT_m_fifo_1_full_4___d35;
 
 /* Rules */
 public:
  void RL_m_fifo_1_enq_ehr_canonicalize();
  void RL_m_fifo_1_deq_ehr_canonicalize();
  void RL_m_fifo_1_clear_ehr_canonicalize();
  void RL_m_fifo_1_canocalize();
  void RL_m_fifo_2_enq_ehr_canonicalize();
  void RL_m_fifo_2_deq_ehr_canonicalize();
  void RL_m_fifo_2_clear_ehr_canonicalize();
  void RL_m_fifo_2_canocalize();
  void RL_m_fifo_1_ehr_canonicalize();
  void RL_m_fifo_2_ehr_canonicalize();
  void RL_m_enq_fifo_1();
  void RL_m_deq_fifo_1();
  void RL_m_deq_fifo_2();
  void RL_m_enq_fifo_2();
  void RL_m_cycle_stuff();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbCFScheduling &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbCFScheduling &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbCFScheduling &backing);
};

#endif /* ifndef __mkTbCFScheduling_h__ */
