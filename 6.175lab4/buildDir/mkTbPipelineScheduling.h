/*
 * Generated by Bluespec Compiler, version 2024.01-20-g9a97f9d0 (build 9a97f9d0)
 * 
 * On Thu Aug 15 20:29:53 CST 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTbPipelineScheduling_h__
#define __mkTbPipelineScheduling_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbPipelineScheduling module */
class MOD_mkTbPipelineScheduling : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_m_cycle;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_data_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqP_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqP_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqP_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqP_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqP_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqP_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_deqP_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqP_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqP_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_deqP_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_empty_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_empty_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqP_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_enqP_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_enqP_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_enqP_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqP_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqP_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_enqP_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_enqP_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_enqP_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_enqP_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_1_full_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_1_full_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_data_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqP_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqP_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqP_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqP_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqP_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqP_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_deqP_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqP_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqP_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_deqP_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_ehr_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_ehr_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_empty_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_empty_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqP_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_enqP_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_enqP_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_enqP_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqP_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqP_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_enqP_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_enqP_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_enqP_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_enqP_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_ehrReg;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_ignored_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_ignored_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_ignored_wires_2;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_virtual_reg_0;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_virtual_reg_1;
  MOD_Reg<tUInt8> INST_m_fifo_2_full_virtual_reg_2;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_wires_0;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_wires_1;
  MOD_Wire<tUInt8> INST_m_fifo_2_full_wires_2;
 
 /* Constructor */
 public:
  MOD_mkTbPipelineScheduling(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_m_cycle_stuff;
  tUInt8 DEF_CAN_FIRE_RL_m_cycle_stuff;
  tUInt8 DEF_WILL_FIRE_RL_m_clear_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_clear_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_enq_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_enq_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_deq_fifo_2;
  tUInt8 DEF_CAN_FIRE_RL_m_deq_fifo_2;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_ehr_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_full_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_full_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_empty_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_empty_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_deqP_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_deqP_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_2_enqP_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_2_enqP_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_full_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_full_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_empty_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_empty_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_deqP_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_deqP_canonicalize;
  tUInt8 DEF_WILL_FIRE_RL_m_fifo_1_enqP_canonicalize;
  tUInt8 DEF_CAN_FIRE_RL_m_fifo_1_enqP_canonicalize;
  tUInt8 DEF_m_fifo_2_ehr_virtual_reg_2_read____d101;
  tUInt8 DEF_x__h14136;
  tUInt8 DEF_m_fifo_2_full_virtual_reg_2_read__43_OR_m_fifo_ETC___d149;
  tUInt8 DEF_x_wget__h10555;
  tUInt8 DEF_def__h16340;
  tUInt8 DEF_m_fifo_2_ehr_virtual_reg_1_read____d102;
  tUInt8 DEF_m_fifo_2_full_wires_0_whas____d75;
  tUInt8 DEF_m_fifo_2_full_wires_0_wget____d76;
  tUInt8 DEF_m_fifo_2_full_ehrReg__h9167;
  tUInt8 DEF_def__h11355;
  tUInt8 DEF_IF_m_fifo_2_full_wires_0_whas__5_THEN_m_fifo_2_ETC___d78;
  tUInt8 DEF_IF_m_fifo_2_ehr_virtual_reg_2_read__01_OR_m_fi_ETC___d141;
 
 /* Local definitions */
 private:
  tUInt8 DEF_x_wget__h10604;
  tUInt8 DEF_x_wget__h6167;
  tUInt8 DEF_x_wget__h6118;
  tUInt8 DEF_def__h15639;
  tUInt8 DEF_x_wget__h5070;
  tUInt8 DEF_x_wget__h5021;
  tUInt8 DEF_def__h15814;
  tUInt8 DEF_m_fifo_2_empty_ehrReg__h8051;
  tUInt8 DEF_m_fifo_2_deqP_virtual_reg_2_read____d120;
  tUInt8 DEF_m_fifo_2_deqP_virtual_reg_1_read____d121;
  tUInt8 DEF_m_fifo_2_enqP_virtual_reg_2_read____d130;
  tUInt8 DEF_m_fifo_2_enqP_virtual_reg_1_read____d131;
  tUInt8 DEF_def__h6918;
  tUInt8 DEF_def__h5821;
  tUInt8 DEF_def__h11237;
  tUInt8 DEF_def__h6800;
  tUInt8 DEF_def__h5703;
  tUInt8 DEF_IF_m_fifo_2_full_wires_1_whas__3_THEN_m_fifo_2_ETC___d79;
  tUInt8 DEF_IF_m_fifo_2_empty_wires_1_whas__3_THEN_m_fifo__ETC___d69;
  tUInt8 DEF_IF_m_fifo_2_empty_wires_0_whas__5_THEN_m_fifo__ETC___d68;
 
 /* Rules */
 public:
  void RL_m_fifo_1_enqP_canonicalize();
  void RL_m_fifo_1_deqP_canonicalize();
  void RL_m_fifo_1_empty_canonicalize();
  void RL_m_fifo_1_full_canonicalize();
  void RL_m_fifo_2_enqP_canonicalize();
  void RL_m_fifo_2_deqP_canonicalize();
  void RL_m_fifo_2_empty_canonicalize();
  void RL_m_fifo_2_full_canonicalize();
  void RL_m_fifo_1_ehr_canonicalize();
  void RL_m_fifo_2_ehr_canonicalize();
  void RL_m_deq_fifo_2();
  void RL_m_enq_fifo_2();
  void RL_m_clear_fifo_2();
  void RL_m_cycle_stuff();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbPipelineScheduling &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbPipelineScheduling &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbPipelineScheduling &backing);
};

#endif /* ifndef __mkTbPipelineScheduling_h__ */
