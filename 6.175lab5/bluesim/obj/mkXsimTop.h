/*
 * Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
 * 
 * On Sat Sep 21 04:03:29 UTC 2024
 * 
 */

/* Generation options: */
#ifndef __mkXsimTop_h__
#define __mkXsimTop_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkMMUIndicationOutput.h"
#include "mkMMURequestInput.h"
#include "mkMMUSynth.h"
#include "mkMemServerIndicationOutput.h"
#include "mkMemServerRequestInput.h"
#include "mkCnocTop.h"


/* Class declaration for the mkXsimTop module */
class MOD_mkXsimTop : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
  tClock __clk_handle_1;
  tClock __clk_handle_2;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_dumpstarted;
  MOD_Reg<tUInt8> INST_initCalled;
  MOD_mkMMUIndicationOutput INST_lMMUIndicationOutput;
  MOD_Reg<tUInt8> INST_lMMUIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMMUIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lMMUIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMMUIndicationOutputNoc_methodIdReg;
  MOD_mkMMURequestInput INST_lMMURequestInput;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMMURequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMMURequestInputNoc_methodIdReg;
  MOD_mkMMUSynth INST_lMMU_mmu;
  MOD_mkMemServerIndicationOutput INST_lMemServerIndicationOutput;
  MOD_Reg<tUInt8> INST_lMemServerIndicationOutputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMemServerIndicationOutputNoc_fifoMsgSource;
  MOD_Reg<tUInt32> INST_lMemServerIndicationOutputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMemServerIndicationOutputNoc_methodIdReg;
  MOD_mkMemServerRequestInput INST_lMemServerRequestInput;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_bpState;
  MOD_Fifo<tUInt32> INST_lMemServerRequestInputNoc_fifoMsgSink;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_messageWordsReg;
  MOD_Reg<tUInt8> INST_lMemServerRequestInputNoc_methodIdReg;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_addrReqFifo;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_reader_dbgFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_reader_dbgFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_reader_dbgPtr;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_mmu_servers_0_tokFifo;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_beatCount;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_burstReg;
  MOD_RegFile<tUInt8,tUInt32> INST_lMemServer_reader_readers_0_clientBurstLen;
  MOD_BRAM<tUInt32,tUWide,tUInt8> INST_lMemServer_reader_readers_0_clientData_memory;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_dequeueing;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqw;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_dequeueing;
  MOD_Wire<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqw;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_clientData_serverAdapterB_writeWithResp;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_clientRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_clientSelect;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compClientReg;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_compCountReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compTagReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_compTileReg;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_cycle_cnt;
  MOD_Fifo<tUInt64> INST_lMemServer_reader_readers_0_dmaErrorFifo;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_firstReg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_0;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_1;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_2;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_killv_3;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_comp;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_loadClient;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_mmuResp;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_readData;
  MOD_Reg<tUInt64> INST_lMemServer_reader_readers_0_last_readReq;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_serverData;
  MOD_BRAM<tUInt8,tUInt32,tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_memory;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_dequeueing;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqw;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_dequeueing;
  MOD_Wire<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqw;
  MOD_Fifo<tUInt32> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_writeWithResp;
  MOD_Fifo<tUWide> INST_lMemServer_reader_readers_0_serverRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_serverTag;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_0;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_1;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_2;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_stopv_3;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_comp_fifo;
  MOD_Reg<tUInt32> INST_lMemServer_reader_readers_0_tag_gen_comp_state;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_dec_wire;
  MOD_Wire<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_inc_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_counter_positive_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_head_ptr;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_inited;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_retFifo;
  MOD_Fifo<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_tagFifo;
  MOD_CReg<tUInt32> INST_lMemServer_reader_readers_0_tag_gen_tags;
  MOD_Reg<tUInt8> INST_lMemServer_reader_readers_0_tag_gen_tail_ptr;
  MOD_Reg<tUInt64> INST_lMemServer_reader_trafficAccum;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_reader_trafficFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_reader_trafficFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_reader_trafficPtr;
  MOD_Fifo<tUInt32> INST_lMemServer_writer_addrReqFifo;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_writer_dbgFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_writer_dbgFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_writer_dbgPtr;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_mmu_servers_0_tokFifo;
  MOD_Reg<tUInt64> INST_lMemServer_writer_trafficAccum;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_abort;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_start_reg_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_start_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_state_can_overlap;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficFSM_state_fired;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_lMemServer_writer_trafficFSM_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_overlap_pw;
  MOD_Wire<tUInt8> INST_lMemServer_writer_trafficFSM_state_set_pw;
  MOD_Reg<tUInt8> INST_lMemServer_writer_trafficPtr;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_beatCount;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_burstReg;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientRequest;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_clientResponse;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientWriteData_0;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_clientWriteData_1;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_cycle_cnt;
  MOD_Fifo<tUInt64> INST_lMemServer_writer_writers_0_dmaErrorFifo;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_firstReg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_0;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_1;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_2;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_killv_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_lastReg;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_last_loadClient;
  MOD_Reg<tUInt64> INST_lMemServer_writer_writers_0_last_mmuResp;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_memDataFifo;
  MOD_BRAM<tUInt8,tUInt8,tUInt8> INST_lMemServer_writer_writers_0_respFifos_memory;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_dequeueing;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqw;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_3;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_dequeueing;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqw;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_ff;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_respFifos_serverAdapterB_writeWithResp;
  MOD_Fifo<tUInt32> INST_lMemServer_writer_writers_0_serverProcessing;
  MOD_Fifo<tUWide> INST_lMemServer_writer_writers_0_serverRequest;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_0;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_1;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_2;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_stopv_3;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_comp_fifo;
  MOD_Reg<tUInt32> INST_lMemServer_writer_writers_0_tag_gen_comp_state;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_cnt;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_dec_wire;
  MOD_Wire<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_inc_wire;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_counter_positive_reg;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_head_ptr;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_inited;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_retFifo;
  MOD_Fifo<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_tagFifo;
  MOD_CReg<tUInt32> INST_lMemServer_writer_writers_0_tag_gen_tags;
  MOD_Reg<tUInt8> INST_lMemServer_writer_writers_0_tag_gen_tail_ptr;
  MOD_Fifo<tUWide> INST_slave_2_0_bFifo;
  MOD_Reg<tUInt8> INST_slave_2_0_burstReg;
  MOD_Reg<tUInt64> INST_slave_2_0_cycles;
  MOD_Reg<tUInt64> INST_slave_2_0_last_read_eob;
  MOD_Reg<tUInt64> INST_slave_2_0_last_reqAr;
  MOD_Reg<tUInt64> INST_slave_2_0_last_write_eob;
  MOD_Fifo<tUWide> INST_slave_2_0_readDelayFifo;
  MOD_Reg<tUInt32> INST_slave_2_0_readLenReg;
  MOD_Reg<tUInt32> INST_slave_2_0_readOffsetReg;
  MOD_Reg<tUInt64> INST_slave_2_0_req_ar_b_ts;
  MOD_Reg<tUInt64> INST_slave_2_0_req_aw_b_ts;
  MOD_Fifo<tUInt8> INST_slave_2_0_reqs;
  MOD_Fifo<tUInt64> INST_slave_2_0_rw_dataFifo;
  MOD_Fifo<tUInt8> INST_slave_2_0_taglastfifo;
  MOD_Fifo<tUWide> INST_slave_2_0_writeDelayFifo;
  MOD_Reg<tUInt32> INST_slave_2_0_writeLenReg;
  MOD_Reg<tUInt32> INST_slave_2_0_writeOffsetReg;
  MOD_mkCnocTop INST_top;
 
 /* Constructor */
 public:
  MOD_mkXsimTop(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N_derivedReset;
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l257c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l173c17;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_f_update_l252c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l253c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_f_init_l252c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_trafficFSM_action_l251c20;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_f_update_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_l242c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_l158c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_writer_dbgFSM_action_f_init_l241c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_f_update_l168c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l169c10;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_f_init_l168c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_trafficFSM_action_l167c20;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_f_update_l157c7;
  tUInt8 DEF_WILL_FIRE_RL_lMemServer_reader_dbgFSM_action_f_init_l157c7;
  tUInt32 DEF_x__h96065;
  tUInt32 DEF_writeLen___2__h96138;
  tUInt8 DEF_x__h91485;
  tUInt8 DEF_x__h89645;
  tUInt8 DEF_client__h52365;
  tUWide DEF_slave_2_0_writeDelayFifo_first____d1413;
  tUWide DEF_slave_2_0_readDelayFifo_first____d1341;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_first____d732;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_first____d321;
  tUWide DEF_lMemServer_reader_readers_0_serverData_first____d351;
  tUWide DEF_slave_2_0_bFifo_first____d1450;
  tUInt64 DEF_x__h96823;
  tUInt64 DEF_lMemServerRequestInput_pipes_addrTrans_PipeOut_ETC___d1106;
  tUInt32 DEF_lMemServer_writer_writers_0_tag_gen_comp_state__h50085;
  tUInt32 DEF_t__h50469;
  tUInt32 DEF_lMemServer_reader_readers_0_tag_gen_comp_state__h11014;
  tUInt32 DEF_t__h11399;
  tUInt32 DEF_lMemServer_writer_writers_0_serverProcessing_f_ETC___d769;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d129;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d398;
  tUInt32 DEF_lMemServer_reader_readers_0_clientBurstLen_sub_ETC___d353;
  tUInt8 DEF_i__h13428;
  tUInt32 DEF_cnt__h14887;
  tUInt8 DEF_x__h90960;
  tUInt8 DEF_x__h89129;
  tUInt8 DEF__read__h44952;
  tUInt8 DEF__read__h44919;
  tUInt8 DEF__read__h2217;
  tUInt8 DEF__read__h2184;
  tUInt8 DEF_lMemServer_writer_writers_0_clientResponse_first____d1069;
  tUInt8 DEF_x__h50242;
  tUInt8 DEF_x__h11172;
  tUInt8 DEF_b__h48490;
  tUInt8 DEF_b__h47064;
  tUInt8 DEF_b__h9059;
  tUInt8 DEF_b__h7581;
  tUInt8 DEF_b__h5937;
  tUInt8 DEF_b__h4383;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d663;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d615;
  tUInt8 DEF_x__h14902;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d251;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d203;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d155;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d107;
  tUInt8 DEF_lMemServer_writer_writers_0_firstReg__h52776;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d642;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d640;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d639;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d634;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d594;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d592;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d591;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_3__h52585;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_2__h52584;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_1__h52583;
  tUInt8 DEF_lMemServer_writer_writers_0_killv_0__h52582;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d230;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d228;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d227;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d222;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d182;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d180;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d179;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d134;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d132;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d131;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d126;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d85;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d83;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d82;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d77;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_3__h14927;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_2__h14926;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_1__h14925;
  tUInt8 DEF_lMemServer_reader_readers_0_killv_0__h14924;
  tUInt8 DEF_lMemServerRequestInput_pipes_memoryTraffic_Pip_ETC___d1147;
  tUInt8 DEF_lMemServerRequestInput_pipes_stateDbg_PipeOut__ETC___d1136;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1237;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1236;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1235;
  tUInt8 DEF_lMemServerIndicationOutput_portalIfc_indicatio_ETC___d1234;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_2_n_ETC___d1161;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_1_n_ETC___d1160;
  tUInt8 DEF_lMMUIndicationOutput_portalIfc_indications_0_n_ETC___d1159;
  tUInt8 DEF_x_wget_req_tag__h5402;
  tUInt8 DEF_x_first_req_tag__h14185;
  tUInt8 DEF_x__h52377;
  tUInt8 DEF_x__h14250;
  tUInt8 DEF_lMemServer_reader_readers_0_clientBurstLen_sub_ETC___d354;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d664;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d616;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d252;
  tUInt8 DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d204;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d156;
  tUInt8 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d108;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_writer_writers_0_killv__ETC___d771;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_reader_readers_0_killv__ETC___d430;
  tUInt8 DEF_SEL_ARR_NOT_lMemServer_reader_readers_0_killv__ETC___d404;
  tUInt8 DEF_lMemServer_writer_writers_0_tag_gen_tags_port1_ETC___d692;
  tUInt8 DEF_lMemServer_reader_readers_0_tag_gen_tags_port1_ETC___d280;
  tUInt8 DEF_slave_2_0_writeLenReg_421_EQ_0___d1422;
  tUInt32 DEF_y_avValue_snd_fst__h96368;
  tUInt8 DEF_lMemServerRequestInput_pipes_addrTrans_PipeOut_ETC___d1108;
  tUInt8 DEF_lMemServer_writer_addrReqFifo_first__21_BITS_3_ETC___d823;
  tUInt8 DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d734;
  tUInt8 DEF_lMemServer_reader_addrReqFifo_first__43_BITS_3_ETC___d445;
  tUInt8 DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d323;
  tUInt8 DEF_IF_slave_2_0_writeLenReg_421_EQ_0_422_THEN_0_C_ETC___d1426;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_3_95___d396;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_2_93___d394;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_1_91___d392;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_killv_0_89___d390;
 
 /* Local definitions */
 private:
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1321;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1317;
  tUInt64 DEF_TASK_dpi_msgSink_beat___d1313;
  tUInt32 DEF_TASK_read_simDma32___d1357;
  tUInt32 DEF_TASK_read_simDma32___d1358;
  tUInt8 DEF_TASK_dpi_cycle___d5;
  tUWide DEF_top_writers_1_writeReq_get___d1079;
  tUWide DEF_top_writers_0_writeReq_get___d1039;
  tUWide DEF_top_readers_1_readReq_get___d1008;
  tUWide DEF_top_readers_0_readReq_get___d968;
  tUWide DEF_top_writers_1_writeData_get___d1099;
  tUWide DEF_top_writers_0_writeData_get___d1068;
  tUWide DEF_lMMURequestInput_pipes_region_PipeOut_first____d46;
  tUWide DEF_lMMURequestInput_pipes_sglist_PipeOut_first____d36;
  tUWide DEF_lMemServer_writer_writers_0_serverRequest_first____d1401;
  tUWide DEF_lMemServer_reader_readers_0_serverRequest_first____d1372;
  tUWide DEF_lMMU_mmu_errorPipe_first____d25;
  tUWide DEF_lMemServer_writer_writers_0_clientWriteData_1__ETC___d806;
  tUWide DEF_lMemServer_writer_writers_0_clientWriteData_0__ETC___d804;
  tUWide DEF_lMemServer_writer_writers_0_memDataFifo_first____d1441;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d225;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d1003;
  tUWide DEF_lMemServer_reader_readers_0_clientData_serverA_ETC___d177;
  tUWide DEF_lMemServer_reader_readers_0_clientData_memory__ETC___d258;
  tUWide DEF_lMemServer_reader_readers_0_clientData_memory__ETC___d210;
  tUInt64 DEF_x__h86336;
  tUInt64 DEF_words__h82743;
  tUInt64 DEF_x__h95299;
  tUInt64 DEF_words__h44544;
  tUInt32 DEF_data__h91444;
  tUInt32 DEF_data__h89604;
  tUInt32 DEF_x__h82154;
  tUInt32 DEF_x__h43951;
  tUInt32 DEF_lMemServer_reader_readers_0_serverProcessing_s_ETC___d80;
  tUInt8 DEF_lMemServer_writer_writers_0_respFifos_serverAd_ETC___d637;
  tUInt8 DEF_x__h50598;
  tUInt8 DEF_x__h11528;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_3__h86472;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_2__h86471;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_1__h86470;
  tUInt8 DEF_lMemServer_writer_writers_0_stopv_0__h86469;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_3__h84627;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_2__h84626;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_1__h84625;
  tUInt8 DEF_lMemServer_reader_readers_0_stopv_0__h84624;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d746;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d340;
  tUInt64 DEF_lMMU_mmu_addr_1_response_get_47_BITS_39_TO_0___d748;
  tUInt64 DEF_lMMU_mmu_addr_0_response_get_41_BITS_39_TO_0___d342;
  tUInt8 DEF_v__h86762;
  tUWide DEF_IF_lMemServer_reader_readers_0_clientData_serv_ETC___d1005;
  tUWide DEF_IF_lMemServer_reader_readers_0_clientData_serv_ETC___d1004;
  tUInt8 DEF__0_CONCAT_DONTCARE___d98;
  tUWide DEF_lMemServer_reader_readers_0_clientRequest_firs_ETC___d346;
  tUWide DEF_lMemServer_writer_writers_0_clientRequest_firs_ETC___d753;
  tUWide DEF__2_CONCAT_DONTCARE___d881;
  tUWide DEF_slave_2_0_cycles_333_CONCAT_lMemServer_reader__ETC___d1383;
  tUWide DEF_slave_2_0_cycles_333_CONCAT_lMemServer_writer__ETC___d1411;
  tUWide DEF_top_writers_1_writeReq_get_079_CONCAT_1___d1094;
  tUWide DEF_top_writers_0_writeReq_get_039_CONCAT_0___d1063;
  tUWide DEF_top_readers_1_readReq_get_008_CONCAT_1___d1023;
  tUWide DEF_top_readers_0_readReq_get_68_CONCAT_0___d992;
  tUWide DEF_slave_2_0_rw_dataFifo_first__391_CONCAT_slave__ETC___d1393;
  tUWide DEF_lMemServer_reader_readers_0_serverData_first___ETC___d375;
  tUWide DEF_IF_SEL_ARR_NOT_lMemServer_writer_writers_0_kil_ETC___d812;
  tUWide DEF_slave_2_0_cycles_333_CONCAT_slave_2_0_writeDel_ETC___d1448;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_3_056___d1057;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_2_054___d1055;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_1_052___d1053;
  tUInt8 DEF_NOT_lMemServer_writer_writers_0_stopv_0_050___d1051;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_3_85___d986;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_2_83___d984;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_1_81___d982;
  tUInt8 DEF_NOT_lMemServer_reader_readers_0_stopv_0_79___d980;
  tUInt8 DEF_x__h50562;
  tUInt8 DEF_x__h11492;
 
 /* Rules */
 public:
  void RL_startdump();
  void RL_call_init();
  void RL_finish();
  void RL_lMMU_rl_idResponse();
  void RL_lMMU_rl_configResp();
  void RL_lMMU_dmaError();
  void RL_handle_sglist_request();
  void RL_handle_region_request();
  void RL_handle_idRequest_request();
  void RL_handle_idReturn_request();
  void RL_handle_setInterface_request();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_enqueue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_outData_dequeue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterA_overRun();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_enqueue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_outData_dequeue();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_serverProcessing_serverAdapterB_overRun();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_enqueue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_outData_dequeue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterA_overRun();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_enqueue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_outData_dequeue();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_reader_readers_0_clientData_serverAdapterB_overRun();
  void RL_lMemServer_reader_readers_0_tag_gen_counter_react();
  void RL_lMemServer_reader_readers_0_tag_gen_complete_rule1();
  void RL_lMemServer_reader_readers_0_tag_gen_ret_rule();
  void RL_lMemServer_reader_readers_0_tag_gen_init_rule();
  void RL_lMemServer_reader_readers_0_tag_gen_tag_rule();
  void RL_lMemServer_reader_readers_0_cycle();
  void RL_lMemServer_reader_readers_0_dmaError();
  void RL_lMemServer_reader_readers_0_checkMmuResp();
  void RL_lMemServer_reader_readers_0_read_data();
  void RL_lMemServer_reader_readers_0_tag_completed();
  void RL_lMemServer_reader_readers_0_complete_burst1a();
  void RL_lMemServer_reader_readers_0_burst_remainder();
  void RL_lMemServer_reader_mmuEntry();
  void RL_lMemServer_reader_dbgFSM_start_reg__dreg_update();
  void RL_lMemServer_reader_dbgFSM_state_handle_abort();
  void RL_lMemServer_reader_dbgFSM_state_fired__dreg_update();
  void RL_lMemServer_reader_dbgFSM_state_every();
  void RL_lMemServer_reader_dbgFSM_restart();
  void RL_lMemServer_reader_dbgFSM_action_f_init_l157c7();
  void RL_lMemServer_reader_dbgFSM_action_l158c10();
  void RL_lMemServer_reader_dbgFSM_action_f_update_l157c7();
  void RL_lMemServer_reader_dbgFSM_idle_l157c7();
  void RL_lMemServer_reader_dbgFSM_idle_l157c7_1();
  void RL_lMemServer_reader_dbgFSM_fsm_start();
  void RL_lMemServer_reader_trafficFSM_start_reg__dreg_update();
  void RL_lMemServer_reader_trafficFSM_state_handle_abort();
  void RL_lMemServer_reader_trafficFSM_state_fired__dreg_update();
  void RL_lMemServer_reader_trafficFSM_state_every();
  void RL_lMemServer_reader_trafficFSM_restart();
  void RL_lMemServer_reader_trafficFSM_action_l167c20();
  void RL_lMemServer_reader_trafficFSM_action_f_init_l168c7();
  void RL_lMemServer_reader_trafficFSM_action_l169c10();
  void RL_lMemServer_reader_trafficFSM_action_f_update_l168c7();
  void RL_lMemServer_reader_trafficFSM_action_l173c17();
  void RL_lMemServer_reader_trafficFSM_idle_l166c4();
  void RL_lMemServer_reader_trafficFSM_fsm_start();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_enqueue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_outData_dequeue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_cnt_finalAdd();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_s1__dreg_update();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_stageReadResponseAlways();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_moveToOutFIFO();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterA_overRun();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_enqueue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_outData_dequeue();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_cnt_finalAdd();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_s1__dreg_update();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_stageReadResponseAlways();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_moveToOutFIFO();
  void RL_lMemServer_writer_writers_0_respFifos_serverAdapterB_overRun();
  void RL_lMemServer_writer_writers_0_tag_gen_counter_react();
  void RL_lMemServer_writer_writers_0_tag_gen_complete_rule1();
  void RL_lMemServer_writer_writers_0_tag_gen_ret_rule();
  void RL_lMemServer_writer_writers_0_tag_gen_init_rule();
  void RL_lMemServer_writer_writers_0_tag_gen_tag_rule();
  void RL_lMemServer_writer_writers_0_cycle();
  void RL_lMemServer_writer_writers_0_dmaError();
  void RL_lMemServer_writer_writers_0_checkMmuResp();
  void RL_lMemServer_writer_writers_0_writeDoneComp0();
  void RL_lMemServer_writer_writers_0_memdata();
  void RL_lMemServer_writer_writers_0_fill_clientResponse();
  void RL_lMemServer_writer_mmuEntry();
  void RL_lMemServer_writer_dbgFSM_start_reg__dreg_update();
  void RL_lMemServer_writer_dbgFSM_state_handle_abort();
  void RL_lMemServer_writer_dbgFSM_state_fired__dreg_update();
  void RL_lMemServer_writer_dbgFSM_state_every();
  void RL_lMemServer_writer_dbgFSM_restart();
  void RL_lMemServer_writer_dbgFSM_action_f_init_l241c7();
  void RL_lMemServer_writer_dbgFSM_action_l242c10();
  void RL_lMemServer_writer_dbgFSM_action_f_update_l241c7();
  void RL_lMemServer_writer_dbgFSM_idle_l241c7();
  void RL_lMemServer_writer_dbgFSM_idle_l241c7_1();
  void RL_lMemServer_writer_dbgFSM_fsm_start();
  void RL_lMemServer_writer_trafficFSM_start_reg__dreg_update();
  void RL_lMemServer_writer_trafficFSM_state_handle_abort();
  void RL_lMemServer_writer_trafficFSM_state_fired__dreg_update();
  void RL_lMemServer_writer_trafficFSM_state_every();
  void RL_lMemServer_writer_trafficFSM_restart();
  void RL_lMemServer_writer_trafficFSM_action_l251c20();
  void RL_lMemServer_writer_trafficFSM_action_f_init_l252c7();
  void RL_lMemServer_writer_trafficFSM_action_l253c10();
  void RL_lMemServer_writer_trafficFSM_action_f_update_l252c7();
  void RL_lMemServer_writer_trafficFSM_action_l257c17();
  void RL_lMemServer_writer_trafficFSM_idle_l250c4();
  void RL_lMemServer_writer_trafficFSM_fsm_start();
  void RL_lMemServer_0_mr_request();
  void RL_lMemServer_0_mr_response();
  void RL_lMemServer_1_mr_request();
  void RL_lMemServer_1_mr_response();
  void RL_lMemServer_1_0_mw_request();
  void RL_lMemServer_1_0_mw_response();
  void RL_lMemServer_1_0_mw_done();
  void RL_lMemServer_1_1_mw_request();
  void RL_lMemServer_1_1_mw_response();
  void RL_lMemServer_1_1_mw_done();
  void RL_handle_addrTrans_request();
  void RL_handle_setTileState_request();
  void RL_handle_stateDbg_request();
  void RL_handle_memoryTraffic_request();
  void RL_lMMUIndicationOutputNoc_sendHeader();
  void RL_lMMUIndicationOutputNoc_sendMessage();
  void RL_lMMURequestInputNoc_receiveMessageHeader();
  void RL_lMMURequestInputNoc_receiveMessage();
  void RL_lMemServerIndicationOutputNoc_sendHeader();
  void RL_lMemServerIndicationOutputNoc_sendMessage();
  void RL_lMemServerRequestInputNoc_receiveMessageHeader();
  void RL_lMemServerRequestInputNoc_receiveMessage();
  void RL_req_src_rdy();
  void RL_req_src_rdy_1();
  void RL_req_src_rdy_2();
  void RL_ind_dst_rdy();
  void RL_ind_dst_rdy_1();
  void RL_ind_dst_rdy_2();
  void RL_slave_2_0_increment_cycle();
  void RL_slave_2_0_read_rule();
  void RL_mkConnectionGetPut();
  void RL_mkConnectionGetPut_1();
  void RL_mkConnectionGetPut_2();
  void RL_mkConnectionGetPut_3();
  void RL_mkConnectionGetPut_4();
  void __me_check_57();
  void __me_check_58();
  void __me_check_68();
  void __me_check_69();
  void __me_check_70();
  void __me_check_71();
  void __me_check_106();
  void __me_check_107();
  void __me_check_117();
  void __me_check_118();
  void __me_check_119();
  void __me_check_120();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N_derivedReset(tUInt8 ARG_rst_in);
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
  void set_clk_1(char const *s);
  void set_clk_2(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkXsimTop &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkXsimTop &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkXsimTop &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkXsimTop &backing);
};

#endif /* ifndef __mkXsimTop_h__ */
