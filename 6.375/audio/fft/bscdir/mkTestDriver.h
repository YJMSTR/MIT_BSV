/*
 * Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
 * 
 * On Sat Aug 31 02:08:08 CST 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkTestDriver_h__
#define __mkTestDriver_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkMultiplier.h"


/* Class declaration for the mkTestDriver module */
class MOD_mkTestDriver : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_m_doneread;
  MOD_Reg<tUInt8> INST_m_doneread_double_write_error;
  MOD_Reg<tUInt32> INST_m_in;
  MOD_Reg<tUInt8> INST_m_in_double_write_error;
  MOD_Reg<tUInt8> INST_m_inited;
  MOD_Reg<tUInt8> INST_m_inited_double_write_error;
  MOD_Reg<tUInt32> INST_m_out;
  MOD_Reg<tUInt8> INST_m_out_double_write_error;
  MOD_Counter<tUInt32> INST_m_outstanding;
  MOD_Reg<tUInt8> INST_pipeline_chunker_index;
  MOD_Reg<tUInt8> INST_pipeline_chunker_index_double_write_error;
  MOD_Fifo<tUInt64> INST_pipeline_chunker_infifo;
  MOD_Fifo<tUWide> INST_pipeline_chunker_outfifo;
  MOD_Reg<tUWide> INST_pipeline_chunker_pending;
  MOD_Reg<tUInt8> INST_pipeline_chunker_pending_double_write_error;
  MOD_Fifo<tUWide> INST_pipeline_fft_fft_inputFIFO;
  MOD_Fifo<tUWide> INST_pipeline_fft_fft_outputFIFO;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_0;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_0_double_write_error;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_1;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_1_double_write_error;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_2;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_2_double_write_error;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_3;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regValid_3_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_fft_fft_regs_0;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regs_0_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_fft_fft_regs_1;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regs_1_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_fft_fft_regs_2;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regs_2_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_fft_fft_regs_3;
  MOD_Reg<tUInt8> INST_pipeline_fft_fft_regs_3_double_write_error;
  MOD_Fifo<tUInt32> INST_pipeline_fir_infifo;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_0;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_1;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_2;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_3;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_4;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_5;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_6;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_7;
  MOD_mkMultiplier INST_pipeline_fir_multiplier_8;
  MOD_Fifo<tUInt32> INST_pipeline_fir_outfifo;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_0;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_0_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_1;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_1_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_2;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_2_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_3;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_3_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_4;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_4_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_5;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_5_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_6;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_6_double_write_error;
  MOD_Reg<tUInt32> INST_pipeline_fir_r_7;
  MOD_Reg<tUInt8> INST_pipeline_fir_r_7_double_write_error;
  MOD_Fifo<tUWide> INST_pipeline_ifft_fft_fft_inputFIFO;
  MOD_Fifo<tUWide> INST_pipeline_ifft_fft_fft_outputFIFO;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_0;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_0_double_write_error;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_1;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_1_double_write_error;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_2;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_2_double_write_error;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_3;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regValid_3_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_ifft_fft_fft_regs_0;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regs_0_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_ifft_fft_fft_regs_1;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regs_1_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_ifft_fft_fft_regs_2;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regs_2_double_write_error;
  MOD_Reg<tUWide> INST_pipeline_ifft_fft_fft_regs_3;
  MOD_Reg<tUInt8> INST_pipeline_ifft_fft_fft_regs_3_double_write_error;
  MOD_Fifo<tUWide> INST_pipeline_ifft_outfifo;
  MOD_Reg<tUInt8> INST_pipeline_splitter_index;
  MOD_Reg<tUInt8> INST_pipeline_splitter_index_double_write_error;
  MOD_Fifo<tUWide> INST_pipeline_splitter_infifo;
  MOD_Fifo<tUInt64> INST_pipeline_splitter_outfifo;
 
 /* Constructor */
 public:
  MOD_mkTestDriver(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_finish;
  tUInt8 DEF_CAN_FIRE_RL_finish;
  tUInt8 DEF_WILL_FIRE_RL_write;
  tUInt8 DEF_CAN_FIRE_RL_write;
  tUInt8 DEF_WILL_FIRE_RL_pad;
  tUInt8 DEF_CAN_FIRE_RL_pad;
  tUInt8 DEF_WILL_FIRE_RL_read;
  tUInt8 DEF_CAN_FIRE_RL_read;
  tUInt8 DEF_WILL_FIRE_RL_init;
  tUInt8 DEF_CAN_FIRE_RL_init;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_ifft_to_splitter;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_ifft_to_splitter;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_fft_to_ifft;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_fft_to_ifft;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_chunker_to_fft;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_chunker_to_fft;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_fir_to_chunker;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_fir_to_chunker;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_splitter_iterate;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_splitter_iterate;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_ifft_inversify;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_ifft_inversify;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_ifft_fft_fft_linear_fft;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_ifft_fft_fft_linear_fft;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_fft_fft_linear_fft;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_fft_fft_linear_fft;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_chunker_iterate;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_chunker_iterate;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_fir_get_multiplier_res;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_fir_get_multiplier_res;
  tUInt8 DEF_WILL_FIRE_RL_pipeline_fir_process;
  tUInt8 DEF_CAN_FIRE_RL_pipeline_fir_process;
  tUInt8 DEF_x__h7250;
  tUInt8 DEF_pipeline_ifft_fft_fft_regValid_3__h819762;
  tUInt8 DEF_pipeline_ifft_fft_fft_outputFIFO_notFull____d1615;
  tUInt8 DEF_pipeline_ifft_fft_fft_inputFIFO_notEmpty____d1621;
  tUInt8 DEF_pipeline_fft_fft_regValid_3__h414943;
  tUInt8 DEF_pipeline_fft_fft_outputFIFO_notFull____d127;
  tUInt8 DEF_pipeline_fft_fft_inputFIFO_notEmpty____d133;
  tUInt8 DEF_pipeline_chunker_index_2_EQ_7___d83;
  tUInt8 DEF_NOT_pipeline_ifft_fft_fft_inputFIFO_notEmpty__621___d1622;
  tUInt8 DEF_NOT_pipeline_fft_fft_inputFIFO_notEmpty__33___d134;
  tUInt8 DEF_NOT_pipeline_ifft_fft_fft_regValid_3_617___d1618;
  tUInt8 DEF_NOT_pipeline_fft_fft_regValid_3_29___d130;
 
 /* Local definitions */
 private:
  tUInt32 DEF_b__h833553;
  tUInt32 DEF_x__h833738;
  tUInt32 DEF_TASK_fopen___d3242;
  tUInt32 DEF_TASK_fopen___d3240;
  tUWide DEF_pipeline_splitter_infifo_first____d3145;
  tUWide DEF_pipeline_ifft_outfifo_first____d3231;
  tUWide DEF_pipeline_ifft_fft_fft_regs_3__h820941;
  tUWide DEF_pipeline_ifft_fft_fft_regs_2__h756230;
  tUWide DEF_pipeline_ifft_fft_fft_regs_1__h653885;
  tUWide DEF_pipeline_ifft_fft_fft_regs_0__h555395;
  tUWide DEF_pipeline_ifft_fft_fft_outputFIFO_first____d3100;
  tUWide DEF_pipeline_ifft_fft_fft_inputFIFO_first____d1640;
  tUWide DEF_pipeline_fft_fft_regs_3__h416122;
  tUWide DEF_pipeline_fft_fft_regs_2__h351288;
  tUWide DEF_pipeline_fft_fft_regs_1__h248345;
  tUWide DEF_pipeline_fft_fft_regs_0__h149386;
  tUWide DEF_pipeline_fft_fft_outputFIFO_first____d3215;
  tUWide DEF_pipeline_fft_fft_inputFIFO_first____d152;
  tUWide DEF_pipeline_chunker_pending__h8174;
  tUWide DEF_pipeline_chunker_outfifo_first____d3199;
  tUInt32 DEF_m_out___d3271;
  tUWide DEF_pipeline_fft_fft_outputFIFO_first__215_BITS_51_ETC___d3227;
  tUWide DEF_pipeline_fft_fft_outputFIFO_first__215_BITS_51_ETC___d3224;
  tUWide DEF_pipeline_chunker_outfifo_first__199_BITS_511_T_ETC___d3211;
  tUWide DEF_pipeline_chunker_outfifo_first__199_BITS_511_T_ETC___d3208;
  tUWide DEF_pipeline_ifft_fft_fft_outputFIFO_first__100_BI_ETC___d3139;
  tUWide DEF_pipeline_ifft_fft_fft_outputFIFO_first__100_BI_ETC___d3129;
  tUWide DEF_pipeline_ifft_fft_fft_regs_2_676_BITS_447_TO_4_ETC___d3094;
  tUWide DEF_pipeline_ifft_fft_fft_regs_2_676_BITS_447_TO_4_ETC___d3088;
  tUWide DEF_pipeline_ifft_fft_fft_regs_1_329_BITS_447_TO_4_ETC___d2674;
  tUWide DEF_pipeline_ifft_fft_fft_regs_1_329_BITS_447_TO_4_ETC___d2668;
  tUWide DEF_pipeline_ifft_fft_fft_regs_0_984_BITS_447_TO_4_ETC___d2327;
  tUWide DEF_pipeline_ifft_fft_fft_regs_0_984_BITS_447_TO_4_ETC___d2321;
  tUWide DEF_pipeline_ifft_fft_fft_inputFIFO_first__640_BIT_ETC___d1983;
  tUWide DEF_pipeline_ifft_fft_fft_inputFIFO_first__640_BIT_ETC___d1977;
  tUWide DEF_pipeline_fft_fft_regs_2_188_BITS_447_TO_416_18_ETC___d1606;
  tUWide DEF_pipeline_fft_fft_regs_2_188_BITS_447_TO_416_18_ETC___d1600;
  tUWide DEF_pipeline_fft_fft_regs_1_41_BITS_447_TO_416_42__ETC___d1186;
  tUWide DEF_pipeline_fft_fft_regs_1_41_BITS_447_TO_416_42__ETC___d1180;
  tUWide DEF_pipeline_fft_fft_regs_0_96_BITS_447_TO_416_97__ETC___d839;
  tUWide DEF_pipeline_fft_fft_regs_0_96_BITS_447_TO_416_97__ETC___d833;
  tUWide DEF_IF_pipeline_chunker_index_2_EQ_7_3_THEN_pipeli_ETC___d119;
  tUWide DEF_IF_pipeline_chunker_index_2_EQ_7_3_THEN_pipeli_ETC___d112;
  tUWide DEF_pipeline_fft_fft_inputFIFO_first__52_BITS_447__ETC___d495;
  tUWide DEF_pipeline_fft_fft_inputFIFO_first__52_BITS_447__ETC___d489;
  tUWide DEF_pipeline_fft_fft_outputFIFO_first__215_BITS_51_ETC___d3221;
  tUWide DEF_pipeline_chunker_outfifo_first__199_BITS_511_T_ETC___d3205;
  tUWide DEF_pipeline_ifft_fft_fft_outputFIFO_first__100_BI_ETC___d3119;
  tUWide DEF_pipeline_ifft_fft_fft_regs_2_676_BITS_447_TO_4_ETC___d3082;
  tUWide DEF_pipeline_ifft_fft_fft_regs_1_329_BITS_447_TO_4_ETC___d2662;
  tUWide DEF_pipeline_ifft_fft_fft_regs_0_984_BITS_447_TO_4_ETC___d2315;
  tUWide DEF_pipeline_ifft_fft_fft_inputFIFO_first__640_BIT_ETC___d1971;
  tUWide DEF_pipeline_fft_fft_regs_2_188_BITS_447_TO_416_18_ETC___d1594;
  tUWide DEF_pipeline_fft_fft_regs_1_41_BITS_447_TO_416_42__ETC___d1174;
  tUWide DEF_pipeline_fft_fft_regs_0_96_BITS_447_TO_416_97__ETC___d827;
  tUWide DEF_IF_pipeline_chunker_index_2_EQ_7_3_THEN_pipeli_ETC___d105;
  tUWide DEF_pipeline_fft_fft_inputFIFO_first__52_BITS_447__ETC___d483;
  tUWide DEF_pipeline_fft_fft_outputFIFO_first__215_BITS_51_ETC___d3218;
  tUWide DEF_pipeline_chunker_outfifo_first__199_BITS_511_T_ETC___d3202;
  tUWide DEF_pipeline_ifft_fft_fft_outputFIFO_first__100_BI_ETC___d3109;
  tUWide DEF_pipeline_ifft_fft_fft_regs_2_676_BITS_447_TO_4_ETC___d2844;
  tUWide DEF_pipeline_ifft_fft_fft_regs_1_329_BITS_447_TO_4_ETC___d2496;
  tUWide DEF_pipeline_ifft_fft_fft_regs_0_984_BITS_447_TO_4_ETC___d2149;
  tUWide DEF_pipeline_ifft_fft_fft_inputFIFO_first__640_BIT_ETC___d1805;
  tUWide DEF_pipeline_fft_fft_regs_2_188_BITS_447_TO_416_18_ETC___d1356;
  tUWide DEF_pipeline_fft_fft_regs_1_41_BITS_447_TO_416_42__ETC___d1008;
  tUWide DEF_pipeline_fft_fft_regs_0_96_BITS_447_TO_416_97__ETC___d661;
  tUWide DEF_IF_pipeline_chunker_index_2_EQ_7_3_THEN_pipeli_ETC___d98;
  tUWide DEF_pipeline_fft_fft_inputFIFO_first__52_BITS_447__ETC___d317;
 
 /* Rules */
 public:
  void RL_pipeline_fir_process();
  void RL_pipeline_fir_get_multiplier_res();
  void RL_pipeline_chunker_iterate();
  void RL_pipeline_fft_fft_linear_fft();
  void RL_pipeline_ifft_fft_fft_linear_fft();
  void RL_pipeline_ifft_inversify();
  void RL_pipeline_splitter_iterate();
  void RL_pipeline_fir_to_chunker();
  void RL_pipeline_chunker_to_fft();
  void RL_pipeline_fft_to_ifft();
  void RL_pipeline_ifft_to_splitter();
  void RL_init();
  void RL_read();
  void RL_pad();
  void RL_write();
  void RL_finish();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTestDriver &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTestDriver &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTestDriver &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkTestDriver &backing);
};

#endif /* ifndef __mkTestDriver_h__ */
