/*
 * Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
 * 
 * On Mon Sep 16 07:55:32 UTC 2024
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkPitchAdjustTest_h__
#define __mkPitchAdjustTest_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkPitchAdjustTest module */
class MOD_mkPitchAdjustTest : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_check;
  MOD_Reg<tUInt32> INST_feed;
  MOD_Reg<tUInt8> INST_passed;
  MOD_Reg<tUInt32> INST_pitch_bin;
  MOD_Reg<tUInt32> INST_pitch_factor;
  MOD_Reg<tUInt8> INST_pitch_i;
  MOD_Reg<tUInt8> INST_pitch_init_flag;
  MOD_Reg<tUInt32> INST_pitch_inphases_0;
  MOD_Reg<tUInt32> INST_pitch_inphases_1;
  MOD_Reg<tUInt32> INST_pitch_inphases_2;
  MOD_Reg<tUInt32> INST_pitch_inphases_3;
  MOD_Reg<tUInt32> INST_pitch_inphases_4;
  MOD_Reg<tUInt32> INST_pitch_inphases_5;
  MOD_Reg<tUInt32> INST_pitch_inphases_6;
  MOD_Reg<tUInt32> INST_pitch_inphases_7;
  MOD_Reg<tUWide> INST_pitch_inputData;
  MOD_Fifo<tUWide> INST_pitch_inputFIFO;
  MOD_Reg<tUInt32> INST_pitch_outphases_0;
  MOD_Reg<tUInt32> INST_pitch_outphases_1;
  MOD_Reg<tUInt32> INST_pitch_outphases_2;
  MOD_Reg<tUInt32> INST_pitch_outphases_3;
  MOD_Reg<tUInt32> INST_pitch_outphases_4;
  MOD_Reg<tUInt32> INST_pitch_outphases_5;
  MOD_Reg<tUInt32> INST_pitch_outphases_6;
  MOD_Reg<tUInt32> INST_pitch_outphases_7;
  MOD_Reg<tUWide> INST_pitch_outputData;
  MOD_Fifo<tUWide> INST_pitch_outputFIFO;
 
 /* Constructor */
 public:
  MOD_mkPitchAdjustTest(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_finish;
  tUInt8 DEF_CAN_FIRE_RL_finish;
  tUInt8 DEF_WILL_FIRE_RL_c2;
  tUInt8 DEF_CAN_FIRE_RL_c2;
  tUInt8 DEF_WILL_FIRE_RL_c1;
  tUInt8 DEF_CAN_FIRE_RL_c1;
  tUInt8 DEF_WILL_FIRE_RL_c0;
  tUInt8 DEF_CAN_FIRE_RL_c0;
  tUInt8 DEF_WILL_FIRE_RL_f2;
  tUInt8 DEF_CAN_FIRE_RL_f2;
  tUInt8 DEF_WILL_FIRE_RL_f1;
  tUInt8 DEF_CAN_FIRE_RL_f1;
  tUInt8 DEF_WILL_FIRE_RL_f0;
  tUInt8 DEF_CAN_FIRE_RL_f0;
  tUInt8 DEF_WILL_FIRE_RL_pitch_outputRule;
  tUInt8 DEF_CAN_FIRE_RL_pitch_outputRule;
  tUInt8 DEF_WILL_FIRE_RL_pitch_processDataRule;
  tUInt8 DEF_CAN_FIRE_RL_pitch_processDataRule;
  tUInt8 DEF_WILL_FIRE_RL_pitch_inputRule;
  tUInt8 DEF_CAN_FIRE_RL_pitch_inputRule;
  tUInt8 DEF_x__h8271;
  tUInt32 DEF_x__h20815;
  tUInt32 DEF_x__h20810;
 
 /* Local definitions */
 private:
  tUInt32 DEF_unsigned_0___d252;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_367__ETC___d277;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_367_TO_352___d236;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_319__ETC___d274;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_319_TO_304___d225;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_271__ETC___d271;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_271_TO_256___d214;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_223__ETC___d268;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_223_TO_208___d203;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_175__ETC___d265;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_175_TO_160___d192;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_127__ETC___d262;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_127_TO_112___d181;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_79_T_ETC___d259;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_79_TO_64___d170;
  tUInt32 DEF_unsigned_pitch_outputFIFO_first__55_BITS_31_T_ETC___d256;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_31_TO_16___d159;
  tUInt32 DEF_signed_1___d251;
  tUInt32 DEF_signed_0___d253;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_351_TO_ETC___d278;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_351_TO_336___d240;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_383_TO_ETC___d276;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_383_TO_368___d233;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_303_TO_ETC___d275;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_303_TO_288___d229;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_335_TO_ETC___d273;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_335_TO_320___d222;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_255_TO_ETC___d272;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_255_TO_240___d218;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_287_TO_ETC___d270;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_287_TO_272___d211;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_207_TO_ETC___d269;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_207_TO_192___d207;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_239_TO_ETC___d267;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_239_TO_224___d200;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_159_TO_ETC___d266;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_159_TO_144___d196;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_191_TO_ETC___d264;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_191_TO_176___d189;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_111_TO_ETC___d263;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_111_TO_96___d185;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_143_TO_ETC___d261;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_143_TO_128___d178;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_63_TO__ETC___d260;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_63_TO_48___d174;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_95_TO__ETC___d258;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_95_TO_80___d167;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_15_TO__ETC___d257;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_15_TO_0___d163;
  tUInt32 DEF_signed_pitch_outputFIFO_first__55_BITS_47_TO__ETC___d255;
  tUInt32 DEF_pitch_outputFIFO_first__55_BITS_47_TO_32___d156;
  tUWide DEF_pitch_outputData__h8257;
  tUWide DEF_pitch_inputData__h6313;
  tUWide DEF_pitch_outputFIFO_first____d155;
  tUWide DEF_pitch_inputFIFO_first____d7;
  tUWide DEF_IF_pitch_bin_1_BITS_31_TO_16_4_EQ_7_5_THEN_SEL_ETC___d138;
  tUWide DEF_IF_pitch_bin_1_BITS_31_TO_16_4_EQ_7_5_THEN_SEL_ETC___d133;
  tUWide DEF_IF_pitch_bin_1_BITS_31_TO_16_4_EQ_7_5_THEN_SEL_ETC___d128;
  tUWide DEF_IF_pitch_bin_1_BITS_31_TO_16_4_EQ_7_5_THEN_SEL_ETC___d123;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_383_TO_368_ETC___d243;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_15_TO_0_63_ETC___d165;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_31_TO_16_5_ETC___d161;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_47_TO_32_5_ETC___d166;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_95_TO_80_6_ETC___d177;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_191_TO_176_ETC___d199;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_239_TO_224_ETC___d210;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_287_TO_272_ETC___d221;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_335_TO_320_ETC___d228;
  tUInt8 DEF_NOT_pitch_outputFIFO_first__55_BITS_143_TO_128_ETC___d184;
  tUInt32 DEF_x__h15848;
  tUInt32 DEF_x__h10346;
 
 /* Rules */
 public:
  void RL_pitch_inputRule();
  void RL_pitch_processDataRule();
  void RL_pitch_outputRule();
  void RL_f0();
  void RL_f1();
  void RL_f2();
  void RL_c0();
  void RL_c1();
  void RL_c2();
  void RL_finish();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkPitchAdjustTest &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkPitchAdjustTest &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkPitchAdjustTest &backing);
};

#endif /* ifndef __mkPitchAdjustTest_h__ */
