/*
 * Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
 * 
 * On Mon Aug 19 09:53:54 CST 2024
 * 
 */
#include "bluesim_primitives.h"
#include "mkTestDriver.h"


/* String declarations */
static std::string const __str_literal_7("%c", 2u);
static std::string const __str_literal_3("couldn't open in.pcm", 20u);
static std::string const __str_literal_6("couldn't open out.pcm for write", 31u);
static std::string const __str_literal_1("in.pcm", 6u);
static std::string const __str_literal_4("out.pcm", 7u);
static std::string const __str_literal_2("rb", 2u);
static std::string const __str_literal_5("wb", 2u);


/* Constructor */
MOD_mkTestDriver::MOD_mkTestDriver(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_m_doneread(simHdl, "m_doneread", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_m_in(simHdl, "m_in", this, 32u),
    INST_m_inited(simHdl, "m_inited", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_m_out(simHdl, "m_out", this, 32u),
    INST_m_outstanding(simHdl, "m_outstanding", this, 32u, 0u),
    INST_pipeline_infifo(simHdl, "pipeline_infifo", this, 16u, 2u, (tUInt8)1u, 0u),
    INST_pipeline_multiplier(simHdl, "pipeline_multiplier", this),
    INST_pipeline_outfifo(simHdl, "pipeline_outfifo", this, 16u, 2u, (tUInt8)1u, 0u),
    INST_pipeline_r0(simHdl, "pipeline_r0", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r1(simHdl, "pipeline_r1", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r2(simHdl, "pipeline_r2", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r3(simHdl, "pipeline_r3", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r4(simHdl, "pipeline_r4", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r5(simHdl, "pipeline_r5", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r6(simHdl, "pipeline_r6", this, 16u, 0u, (tUInt8)0u),
    INST_pipeline_r7(simHdl, "pipeline_r7", this, 16u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_b__h30856(2863311530u),
    DEF_x__h31007(2863311530u),
    DEF_TASK_fopen___d217(2863311530u),
    DEF_TASK_fopen___d215(2863311530u)
{
  symbol_count = 31u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTestDriver::init_symbols_0()
{
  init_symbol(&symbols[0u], "CAN_FIRE_RL_finish", SYM_DEF, &DEF_CAN_FIRE_RL_finish, 1u);
  init_symbol(&symbols[1u], "CAN_FIRE_RL_init", SYM_DEF, &DEF_CAN_FIRE_RL_init, 1u);
  init_symbol(&symbols[2u],
	      "CAN_FIRE_RL_pipeline_process",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_pipeline_process,
	      1u);
  init_symbol(&symbols[3u], "CAN_FIRE_RL_read", SYM_DEF, &DEF_CAN_FIRE_RL_read, 1u);
  init_symbol(&symbols[4u], "CAN_FIRE_RL_write", SYM_DEF, &DEF_CAN_FIRE_RL_write, 1u);
  init_symbol(&symbols[5u], "m_doneread", SYM_MODULE, &INST_m_doneread);
  init_symbol(&symbols[6u], "m_in", SYM_MODULE, &INST_m_in);
  init_symbol(&symbols[7u], "m_inited", SYM_MODULE, &INST_m_inited);
  init_symbol(&symbols[8u], "m_out", SYM_MODULE, &INST_m_out);
  init_symbol(&symbols[9u], "m_outstanding", SYM_MODULE, &INST_m_outstanding);
  init_symbol(&symbols[10u], "pipeline_infifo", SYM_MODULE, &INST_pipeline_infifo);
  init_symbol(&symbols[11u], "pipeline_multiplier", SYM_MODULE, &INST_pipeline_multiplier);
  init_symbol(&symbols[12u], "pipeline_outfifo", SYM_MODULE, &INST_pipeline_outfifo);
  init_symbol(&symbols[13u], "pipeline_r0", SYM_MODULE, &INST_pipeline_r0);
  init_symbol(&symbols[14u], "pipeline_r1", SYM_MODULE, &INST_pipeline_r1);
  init_symbol(&symbols[15u], "pipeline_r2", SYM_MODULE, &INST_pipeline_r2);
  init_symbol(&symbols[16u], "pipeline_r3", SYM_MODULE, &INST_pipeline_r3);
  init_symbol(&symbols[17u], "pipeline_r4", SYM_MODULE, &INST_pipeline_r4);
  init_symbol(&symbols[18u], "pipeline_r5", SYM_MODULE, &INST_pipeline_r5);
  init_symbol(&symbols[19u], "pipeline_r6", SYM_MODULE, &INST_pipeline_r6);
  init_symbol(&symbols[20u], "pipeline_r7", SYM_MODULE, &INST_pipeline_r7);
  init_symbol(&symbols[21u], "RL_finish", SYM_RULE);
  init_symbol(&symbols[22u], "RL_init", SYM_RULE);
  init_symbol(&symbols[23u], "RL_pipeline_process", SYM_RULE);
  init_symbol(&symbols[24u], "RL_read", SYM_RULE);
  init_symbol(&symbols[25u], "RL_write", SYM_RULE);
  init_symbol(&symbols[26u], "WILL_FIRE_RL_finish", SYM_DEF, &DEF_WILL_FIRE_RL_finish, 1u);
  init_symbol(&symbols[27u], "WILL_FIRE_RL_init", SYM_DEF, &DEF_WILL_FIRE_RL_init, 1u);
  init_symbol(&symbols[28u],
	      "WILL_FIRE_RL_pipeline_process",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_pipeline_process,
	      1u);
  init_symbol(&symbols[29u], "WILL_FIRE_RL_read", SYM_DEF, &DEF_WILL_FIRE_RL_read, 1u);
  init_symbol(&symbols[30u], "WILL_FIRE_RL_write", SYM_DEF, &DEF_WILL_FIRE_RL_write, 1u);
}


/* Rule actions */

void MOD_mkTestDriver::RL_pipeline_process()
{
  tUInt32 DEF_x__h942;
  tUInt32 DEF_x__h918;
  tUInt32 DEF_x__h894;
  tUInt32 DEF_y_f__h4282;
  tUInt32 DEF_y_f__h10284;
  tUInt32 DEF_y_f__h16310;
  tUInt32 DEF_y_f__h22376;
  tUInt32 DEF_y_f__h28475;
  tUInt32 DEF_x__h3242;
  tUInt32 DEF_x__h3226;
  tUInt32 DEF_x__h966;
  tUInt32 DEF_x__h9247;
  tUInt32 DEF_x__h9231;
  tUInt32 DEF_x__h15273;
  tUInt32 DEF_x__h15257;
  tUInt32 DEF_x__h21339;
  tUInt32 DEF_x__h21323;
  tUInt32 DEF_x__h27438;
  tUInt32 DEF_x__h27422;
  tUInt64 DEF__813_MUL_IF_pipeline_infifo_first_BIT_15_2_THEN_ETC___d16;
  tUInt64 DEF__872_MUL_IF_pipeline_r1_BIT_15_1_THEN_NEG_pipel_ETC___d55;
  tUInt64 DEF__53615_MUL_IF_pipeline_r3_BIT_15_1_THEN_NEG_pip_ETC___d95;
  tUInt64 DEF__872_MUL_IF_pipeline_r5_0_BIT_15_31_THEN_NEG_pi_ETC___d135;
  tUInt64 DEF__813_MUL_IF_pipeline_r7_71_BIT_15_72_THEN_NEG_p_ETC___d176;
  tUInt8 DEF_in2_i_BIT_15___h3195;
  tUInt8 DEF_in2_i_BIT_15___h9200;
  tUInt8 DEF_in2_i_BIT_15___h15232;
  tUInt8 DEF_in2_i_BIT_15___h21292;
  tUInt8 DEF_in2_i_BIT_15___h27391;
  tUInt64 DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d30;
  tUInt8 DEF_x_BIT_31___h5696;
  tUInt8 DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d34;
  tUInt64 DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d69;
  tUInt8 DEF_x_BIT_31___h11698;
  tUInt8 DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d73;
  tUInt64 DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d109;
  tUInt8 DEF_x_BIT_31___h17724;
  tUInt8 DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d113;
  tUInt64 DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d149;
  tUInt8 DEF_x_BIT_31___h23790;
  tUInt8 DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d153;
  tUInt64 DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d190;
  tUInt8 DEF_x_BIT_31___h29889;
  tUInt8 DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d194;
  tUInt8 DEF_x_BIT_15___h3766;
  tUInt8 DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d19;
  tUInt8 DEF_x_BIT_15___h9768;
  tUInt8 DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d58;
  tUInt8 DEF_x_BIT_15___h15794;
  tUInt8 DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d98;
  tUInt8 DEF_x_BIT_15___h21860;
  tUInt8 DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d138;
  tUInt8 DEF_x_BIT_15___h27959;
  tUInt8 DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d179;
  tUInt32 DEF_x__h882;
  tUInt32 DEF_IF_NOT_IF_NOT_IF_pipeline_infifo_first_BIT_15__ETC___d212;
  tUInt32 DEF_check__h996;
  tUInt32 DEF_check__h8294;
  tUInt32 DEF_check__h14312;
  tUInt32 DEF_check__h20354;
  tUInt32 DEF_check__h26436;
  tUInt64 DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d33;
  tUInt64 DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d72;
  tUInt64 DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d112;
  tUInt64 DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d152;
  tUInt64 DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d193;
  tUInt64 DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d18;
  tUInt64 DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d57;
  tUInt64 DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d97;
  tUInt64 DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d137;
  tUInt64 DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d178;
  tUInt32 DEF_in2_i__h3188;
  tUInt32 DEF_b__h641;
  tUInt32 DEF_in2_i__h9194;
  tUInt32 DEF_b__h707;
  tUInt32 DEF_in2_i__h15224;
  tUInt32 DEF_b__h773;
  tUInt32 DEF_in2_i__h21286;
  tUInt32 DEF_b__h839;
  tUInt32 DEF_in2_i__h27384;
  DEF_in2_i__h27384 = INST_pipeline_r7.METH_read();
  DEF_b__h839 = INST_pipeline_r6.METH_read();
  DEF_in2_i__h21286 = INST_pipeline_r5.METH_read();
  DEF_b__h773 = INST_pipeline_r4.METH_read();
  DEF_b__h707 = INST_pipeline_r2.METH_read();
  DEF_in2_i__h15224 = INST_pipeline_r3.METH_read();
  DEF_in2_i__h9194 = INST_pipeline_r1.METH_read();
  DEF_b__h641 = INST_pipeline_r0.METH_read();
  DEF_in2_i__h3188 = INST_pipeline_infifo.METH_first();
  DEF_in2_i_BIT_15___h27391 = (tUInt8)(DEF_in2_i__h27384 >> 15u);
  DEF_in2_i_BIT_15___h21292 = (tUInt8)(DEF_in2_i__h21286 >> 15u);
  DEF_in2_i_BIT_15___h15232 = (tUInt8)(DEF_in2_i__h15224 >> 15u);
  DEF_in2_i_BIT_15___h9200 = (tUInt8)(DEF_in2_i__h9194 >> 15u);
  DEF_in2_i_BIT_15___h3195 = (tUInt8)(DEF_in2_i__h3188 >> 15u);
  DEF_x__h27438 = DEF_in2_i__h27384 << 16u;
  DEF_x__h27422 = DEF_in2_i_BIT_15___h27391 ? -DEF_x__h27438 : DEF_x__h27438;
  DEF__813_MUL_IF_pipeline_r7_71_BIT_15_72_THEN_NEG_p_ETC___d176 = ((tUInt64)(813u)) * ((tUInt64)(DEF_x__h27422));
  DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d178 = DEF_in2_i_BIT_15___h27391 ? DEF__813_MUL_IF_pipeline_r7_71_BIT_15_72_THEN_NEG_p_ETC___d176 : -DEF__813_MUL_IF_pipeline_r7_71_BIT_15_72_THEN_NEG_p_ETC___d176;
  DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d179 = (tUInt8)(DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d178 >> 63u);
  DEF_x_BIT_15___h27959 = (tUInt8)((tUInt8)1u & (DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d178 >> 15u));
  DEF_x__h21339 = DEF_in2_i__h21286 << 16u;
  DEF_x__h21323 = DEF_in2_i_BIT_15___h21292 ? -DEF_x__h21339 : DEF_x__h21339;
  DEF__872_MUL_IF_pipeline_r5_0_BIT_15_31_THEN_NEG_pi_ETC___d135 = ((tUInt64)(872u)) * ((tUInt64)(DEF_x__h21323));
  DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d137 = DEF_in2_i_BIT_15___h21292 ? DEF__872_MUL_IF_pipeline_r5_0_BIT_15_31_THEN_NEG_pi_ETC___d135 : -DEF__872_MUL_IF_pipeline_r5_0_BIT_15_31_THEN_NEG_pi_ETC___d135;
  DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d138 = (tUInt8)(DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d137 >> 63u);
  DEF_x_BIT_15___h21860 = (tUInt8)((tUInt8)1u & (DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d137 >> 15u));
  DEF_x__h15273 = DEF_in2_i__h15224 << 16u;
  DEF_x__h15257 = DEF_in2_i_BIT_15___h15232 ? -DEF_x__h15273 : DEF_x__h15273;
  DEF__53615_MUL_IF_pipeline_r3_BIT_15_1_THEN_NEG_pip_ETC___d95 = ((tUInt64)(53615u)) * ((tUInt64)(DEF_x__h15257));
  DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d97 = DEF_in2_i_BIT_15___h15232 ? -DEF__53615_MUL_IF_pipeline_r3_BIT_15_1_THEN_NEG_pip_ETC___d95 : DEF__53615_MUL_IF_pipeline_r3_BIT_15_1_THEN_NEG_pip_ETC___d95;
  DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d98 = (tUInt8)(DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d97 >> 63u);
  DEF_x_BIT_15___h15794 = (tUInt8)((tUInt8)1u & (DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d97 >> 15u));
  DEF_x__h9247 = DEF_in2_i__h9194 << 16u;
  DEF_x__h9231 = DEF_in2_i_BIT_15___h9200 ? -DEF_x__h9247 : DEF_x__h9247;
  DEF__872_MUL_IF_pipeline_r1_BIT_15_1_THEN_NEG_pipel_ETC___d55 = ((tUInt64)(872u)) * ((tUInt64)(DEF_x__h9231));
  DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d57 = DEF_in2_i_BIT_15___h9200 ? DEF__872_MUL_IF_pipeline_r1_BIT_15_1_THEN_NEG_pipel_ETC___d55 : -DEF__872_MUL_IF_pipeline_r1_BIT_15_1_THEN_NEG_pipel_ETC___d55;
  DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d58 = (tUInt8)(DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d57 >> 63u);
  DEF_x_BIT_15___h9768 = (tUInt8)((tUInt8)1u & (DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d57 >> 15u));
  DEF_x__h3242 = DEF_in2_i__h3188 << 16u;
  DEF_x__h3226 = DEF_in2_i_BIT_15___h3195 ? -DEF_x__h3242 : DEF_x__h3242;
  DEF__813_MUL_IF_pipeline_infifo_first_BIT_15_2_THEN_ETC___d16 = ((tUInt64)(813u)) * ((tUInt64)(DEF_x__h3226));
  DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d18 = DEF_in2_i_BIT_15___h3195 ? DEF__813_MUL_IF_pipeline_infifo_first_BIT_15_2_THEN_ETC___d16 : -DEF__813_MUL_IF_pipeline_infifo_first_BIT_15_2_THEN_ETC___d16;
  DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d19 = (tUInt8)(DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d18 >> 63u);
  DEF_x_BIT_15___h3766 = (tUInt8)((tUInt8)1u & (DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d18 >> 15u));
  DEF_y_f__h28475 = DEF_x_BIT_15___h27959 && (DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d179 || !(((tUInt32)(32767u & DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d178)) == 0u)) ? 1u : 0u;
  DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d190 = 281474976710655llu & (((tUInt64)(DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d178 >> 16u)) + (281474976710655llu & ((((tUInt64)(0u)) << 16u) | (tUInt64)(DEF_y_f__h28475))));
  DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d193 = !DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d179 && (tUInt8)(DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d190 >> 47u) ? 140737488355327llu : DEF_IF_pipeline_r7_71_BIT_15_72_THEN_813_MUL_IF_pi_ETC___d190;
  DEF_check__h26436 = (tUInt32)(DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d193 >> 32u);
  DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d194 = (tUInt8)(DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d193 >> 47u);
  DEF_x_BIT_31___h29889 = (tUInt8)((tUInt8)1u & (DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d193 >> 31u));
  DEF_y_f__h22376 = DEF_x_BIT_15___h21860 && (DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d138 || !(((tUInt32)(32767u & DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d137)) == 0u)) ? 1u : 0u;
  DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d149 = 281474976710655llu & (((tUInt64)(DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d137 >> 16u)) + (281474976710655llu & ((((tUInt64)(0u)) << 16u) | (tUInt64)(DEF_y_f__h22376))));
  DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d152 = !DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d138 && (tUInt8)(DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d149 >> 47u) ? 140737488355327llu : DEF_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_IF_pip_ETC___d149;
  DEF_check__h20354 = (tUInt32)(DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d152 >> 32u);
  DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d153 = (tUInt8)(DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d152 >> 47u);
  DEF_x_BIT_31___h23790 = (tUInt8)((tUInt8)1u & (DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d152 >> 31u));
  DEF_y_f__h16310 = DEF_x_BIT_15___h15794 && (DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d98 || !(((tUInt32)(32767u & DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d97)) == 0u)) ? 1u : 0u;
  DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d109 = 281474976710655llu & (((tUInt64)(DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d97 >> 16u)) + (281474976710655llu & ((((tUInt64)(0u)) << 16u) | (tUInt64)(DEF_y_f__h16310))));
  DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d112 = !DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d98 && (tUInt8)(DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d109 >> 47u) ? 140737488355327llu : DEF_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615_MUL_IF__ETC___d109;
  DEF_check__h14312 = (tUInt32)(DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d112 >> 32u);
  DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d113 = (tUInt8)(DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d112 >> 47u);
  DEF_x_BIT_31___h17724 = (tUInt8)((tUInt8)1u & (DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d112 >> 31u));
  DEF_y_f__h10284 = DEF_x_BIT_15___h9768 && (DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d58 || !(((tUInt32)(32767u & DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d57)) == 0u)) ? 1u : 0u;
  DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d69 = 281474976710655llu & (((tUInt64)(DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d57 >> 16u)) + (281474976710655llu & ((((tUInt64)(0u)) << 16u) | (tUInt64)(DEF_y_f__h10284))));
  DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d72 = !DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d58 && (tUInt8)(DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d69 >> 47u) ? 140737488355327llu : DEF_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_pipeli_ETC___d69;
  DEF_check__h8294 = (tUInt32)(DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d72 >> 32u);
  DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d73 = (tUInt8)(DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d72 >> 47u);
  DEF_x_BIT_31___h11698 = (tUInt8)((tUInt8)1u & (DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d72 >> 31u));
  DEF_y_f__h4282 = DEF_x_BIT_15___h3766 && (DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d19 || !(((tUInt32)(32767u & DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d18)) == 0u)) ? 1u : 0u;
  DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d30 = 281474976710655llu & (((tUInt64)(DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d18 >> 16u)) + (281474976710655llu & ((((tUInt64)(0u)) << 16u) | (tUInt64)(DEF_y_f__h4282))));
  DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d33 = !DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d19 && (tUInt8)(DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d30 >> 47u) ? 140737488355327llu : DEF_IF_pipeline_infifo_first_BIT_15_2_THEN_813_MUL_ETC___d30;
  DEF_check__h996 = (tUInt32)(DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d33 >> 32u);
  DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d34 = (tUInt8)(DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d33 >> 47u);
  DEF_x_BIT_31___h5696 = (tUInt8)((tUInt8)1u & (DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d33 >> 31u));
  DEF_x__h966 = !DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d34 && (DEF_x_BIT_31___h5696 || !(DEF_check__h996 == 0u)) ? 2147483647u : (DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d34 && (!DEF_x_BIT_31___h5696 || !((65535u & ~DEF_check__h996) == 0u)) ? 2147483648u : (tUInt32)(DEF_IF_NOT_IF_pipeline_infifo_first_BIT_15_2_THEN__ETC___d33));
  DEF_x__h942 = DEF_x__h966 + (!DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d73 && (DEF_x_BIT_31___h11698 || !(DEF_check__h8294 == 0u)) ? 2147483647u : (DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d73 && (!DEF_x_BIT_31___h11698 || !((65535u & ~DEF_check__h8294) == 0u)) ? 2147483648u : (tUInt32)(DEF_IF_NOT_IF_pipeline_r1_BIT_15_1_THEN_872_MUL_IF_ETC___d72)));
  DEF_x__h918 = DEF_x__h942 + (!DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d113 && (DEF_x_BIT_31___h17724 || !(DEF_check__h14312 == 0u)) ? 2147483647u : (DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d113 && (!DEF_x_BIT_31___h17724 || !((65535u & ~DEF_check__h14312) == 0u)) ? 2147483648u : (tUInt32)(DEF_IF_NOT_IF_pipeline_r3_BIT_15_1_THEN_NEG_53615__ETC___d112)));
  DEF_x__h894 = DEF_x__h918 + (!DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d153 && (DEF_x_BIT_31___h23790 || !(DEF_check__h20354 == 0u)) ? 2147483647u : (DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d153 && (!DEF_x_BIT_31___h23790 || !((65535u & ~DEF_check__h20354) == 0u)) ? 2147483648u : (tUInt32)(DEF_IF_NOT_IF_pipeline_r5_0_BIT_15_31_THEN_872_MUL_ETC___d152)));
  DEF_x__h882 = DEF_x__h894 + (!DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d194 && (DEF_x_BIT_31___h29889 || !(DEF_check__h26436 == 0u)) ? 2147483647u : (DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d194 && (!DEF_x_BIT_31___h29889 || !((65535u & ~DEF_check__h26436) == 0u)) ? 2147483648u : (tUInt32)(DEF_IF_NOT_IF_pipeline_r7_71_BIT_15_72_THEN_813_MU_ETC___d193)));
  DEF_IF_NOT_IF_NOT_IF_pipeline_infifo_first_BIT_15__ETC___d212 = (tUInt32)(DEF_x__h882 >> 16u);
  INST_pipeline_infifo.METH_deq();
  INST_pipeline_r0.METH_write(DEF_in2_i__h3188);
  INST_pipeline_r1.METH_write(DEF_b__h641);
  INST_pipeline_r3.METH_write(DEF_b__h707);
  INST_pipeline_r2.METH_write(DEF_in2_i__h9194);
  INST_pipeline_r4.METH_write(DEF_in2_i__h15224);
  INST_pipeline_r5.METH_write(DEF_b__h773);
  INST_pipeline_r6.METH_write(DEF_in2_i__h21286);
  INST_pipeline_r7.METH_write(DEF_b__h839);
  INST_pipeline_outfifo.METH_enq(DEF_IF_NOT_IF_NOT_IF_pipeline_infifo_first_BIT_15__ETC___d212);
}

void MOD_mkTestDriver::RL_init()
{
  tUInt8 DEF_TASK_fopen_15_EQ_0___d216;
  tUInt8 DEF_TASK_fopen_17_EQ_0___d218;
  INST_m_inited.METH_write((tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_TASK_fopen___d215 = dollar_fopen("s,s", &__str_literal_1, &__str_literal_2);
  DEF_TASK_fopen_15_EQ_0___d216 = DEF_TASK_fopen___d215 == 0u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_TASK_fopen_15_EQ_0___d216)
      dollar_display(sim_hdl, this, "s", &__str_literal_3);
    if (DEF_TASK_fopen_15_EQ_0___d216)
      dollar_finish(sim_hdl, "32", 1u);
  }
  INST_m_in.METH_write(DEF_TASK_fopen___d215);
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_TASK_fopen___d217 = dollar_fopen("s,s", &__str_literal_4, &__str_literal_5);
  DEF_TASK_fopen_17_EQ_0___d218 = DEF_TASK_fopen___d217 == 0u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_TASK_fopen_17_EQ_0___d218)
      dollar_display(sim_hdl, this, "s", &__str_literal_6);
    if (DEF_TASK_fopen_17_EQ_0___d218)
      dollar_finish(sim_hdl, "32", 1u);
  }
  INST_m_out.METH_write(DEF_TASK_fopen___d217);
}

void MOD_mkTestDriver::RL_read()
{
  tUInt32 DEF_TASK_fgetc_31_BITS_7_TO_0_37_CONCAT_TASK_fgetc_ETC___d239;
  tUInt8 DEF_NOT_TASK_fgetc_29_EQ_4294967295_30_34_AND_NOT__ETC___d236;
  tUInt8 DEF_TASK_fgetc_29_EQ_4294967295_30_OR_TASK_fgetc_3_ETC___d233;
  tUInt8 DEF_TASK_fgetc_29_EQ_4294967295___d230;
  tUInt8 DEF_TASK_fgetc_31_EQ_4294967295___d232;
  tUInt8 DEF_a8__h30954;
  tUInt8 DEF_b8__h30955;
  tUInt32 DEF_m_in___d228;
  DEF_m_in___d228 = INST_m_in.METH_read();
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_x__h31007 = dollar_fgetc("32", DEF_m_in___d228);
  DEF_a8__h30954 = (tUInt8)((tUInt8)255u & DEF_x__h31007);
  DEF_TASK_fgetc_29_EQ_4294967295___d230 = DEF_x__h31007 == 4294967295u;
  if (!(PORT_RST_N == (tUInt8)0u))
    DEF_b__h30856 = dollar_fgetc("32", DEF_m_in___d228);
  DEF_b8__h30955 = (tUInt8)((tUInt8)255u & DEF_b__h30856);
  DEF_TASK_fgetc_31_EQ_4294967295___d232 = DEF_b__h30856 == 4294967295u;
  DEF_TASK_fgetc_29_EQ_4294967295_30_OR_TASK_fgetc_3_ETC___d233 = DEF_TASK_fgetc_29_EQ_4294967295___d230 || DEF_TASK_fgetc_31_EQ_4294967295___d232;
  DEF_NOT_TASK_fgetc_29_EQ_4294967295_30_34_AND_NOT__ETC___d236 = !DEF_TASK_fgetc_29_EQ_4294967295___d230 && !DEF_TASK_fgetc_31_EQ_4294967295___d232;
  DEF_TASK_fgetc_31_BITS_7_TO_0_37_CONCAT_TASK_fgetc_ETC___d239 = 65535u & ((((tUInt32)(DEF_b8__h30955)) << 8u) | (tUInt32)(DEF_a8__h30954));
  if (DEF_TASK_fgetc_29_EQ_4294967295_30_OR_TASK_fgetc_3_ETC___d233)
    INST_m_doneread.METH_write((tUInt8)1u);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_TASK_fgetc_29_EQ_4294967295_30_OR_TASK_fgetc_3_ETC___d233)
      dollar_fclose("32", DEF_m_in___d228);
  if (DEF_NOT_TASK_fgetc_29_EQ_4294967295_30_34_AND_NOT__ETC___d236)
    INST_pipeline_infifo.METH_enq(DEF_TASK_fgetc_31_BITS_7_TO_0_37_CONCAT_TASK_fgetc_ETC___d239);
  if (DEF_NOT_TASK_fgetc_29_EQ_4294967295_30_34_AND_NOT__ETC___d236)
    INST_m_outstanding.METH_addA(1u);
}

void MOD_mkTestDriver::RL_write()
{
  tUInt8 DEF_a8__h31166;
  tUInt8 DEF_b8__h31167;
  tUInt32 DEF_pipeline_outfifo_first____d243;
  DEF_m_out___d242 = INST_m_out.METH_read();
  DEF_pipeline_outfifo_first____d243 = INST_pipeline_outfifo.METH_first();
  DEF_b8__h31167 = (tUInt8)(DEF_pipeline_outfifo_first____d243 >> 8u);
  DEF_a8__h31166 = (tUInt8)((tUInt8)255u & DEF_pipeline_outfifo_first____d243);
  INST_pipeline_outfifo.METH_deq();
  INST_m_outstanding.METH_addB(4294967295u);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_fwrite(sim_hdl, this, "32,s,8", DEF_m_out___d242, &__str_literal_7, DEF_a8__h31166);
    dollar_fwrite(sim_hdl, this, "32,s,8", DEF_m_out___d242, &__str_literal_7, DEF_b8__h31167);
  }
}

void MOD_mkTestDriver::RL_finish()
{
  DEF_m_out___d242 = INST_m_out.METH_read();
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_fclose("32", DEF_m_out___d242);
    dollar_finish(sim_hdl, "32", 1u);
  }
}


/* Methods */


/* Reset routines */

void MOD_mkTestDriver::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_pipeline_r7.reset_RST(ARG_rst_in);
  INST_pipeline_r6.reset_RST(ARG_rst_in);
  INST_pipeline_r5.reset_RST(ARG_rst_in);
  INST_pipeline_r4.reset_RST(ARG_rst_in);
  INST_pipeline_r3.reset_RST(ARG_rst_in);
  INST_pipeline_r2.reset_RST(ARG_rst_in);
  INST_pipeline_r1.reset_RST(ARG_rst_in);
  INST_pipeline_r0.reset_RST(ARG_rst_in);
  INST_pipeline_outfifo.reset_RST(ARG_rst_in);
  INST_pipeline_multiplier.reset_RST_N(ARG_rst_in);
  INST_pipeline_infifo.reset_RST(ARG_rst_in);
  INST_m_outstanding.reset_RST(ARG_rst_in);
  INST_m_inited.reset_RST(ARG_rst_in);
  INST_m_doneread.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTestDriver::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTestDriver::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_m_doneread.dump_state(indent + 2u);
  INST_m_in.dump_state(indent + 2u);
  INST_m_inited.dump_state(indent + 2u);
  INST_m_out.dump_state(indent + 2u);
  INST_m_outstanding.dump_state(indent + 2u);
  INST_pipeline_infifo.dump_state(indent + 2u);
  INST_pipeline_multiplier.dump_state(indent + 2u);
  INST_pipeline_outfifo.dump_state(indent + 2u);
  INST_pipeline_r0.dump_state(indent + 2u);
  INST_pipeline_r1.dump_state(indent + 2u);
  INST_pipeline_r2.dump_state(indent + 2u);
  INST_pipeline_r3.dump_state(indent + 2u);
  INST_pipeline_r4.dump_state(indent + 2u);
  INST_pipeline_r5.dump_state(indent + 2u);
  INST_pipeline_r6.dump_state(indent + 2u);
  INST_pipeline_r7.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTestDriver::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 31u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_finish", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_init", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_pipeline_process", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_read", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_write", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_fopen___d215", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_fopen___d217", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_finish", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_init", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_pipeline_process", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_read", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_write", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h30856", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "m_out___d242", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h31007", 32u);
  num = INST_m_doneread.dump_VCD_defs(num);
  num = INST_m_in.dump_VCD_defs(num);
  num = INST_m_inited.dump_VCD_defs(num);
  num = INST_m_out.dump_VCD_defs(num);
  num = INST_m_outstanding.dump_VCD_defs(num);
  num = INST_pipeline_infifo.dump_VCD_defs(num);
  num = INST_pipeline_outfifo.dump_VCD_defs(num);
  num = INST_pipeline_r0.dump_VCD_defs(num);
  num = INST_pipeline_r1.dump_VCD_defs(num);
  num = INST_pipeline_r2.dump_VCD_defs(num);
  num = INST_pipeline_r3.dump_VCD_defs(num);
  num = INST_pipeline_r4.dump_VCD_defs(num);
  num = INST_pipeline_r5.dump_VCD_defs(num);
  num = INST_pipeline_r6.dump_VCD_defs(num);
  num = INST_pipeline_r7.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_pipeline_multiplier.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTestDriver::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTestDriver &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkTestDriver::vcd_defs(tVCDDumpType dt, MOD_mkTestDriver &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_finish) != DEF_CAN_FIRE_RL_finish)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_finish, 1u);
	backing.DEF_CAN_FIRE_RL_finish = DEF_CAN_FIRE_RL_finish;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_init) != DEF_CAN_FIRE_RL_init)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_init, 1u);
	backing.DEF_CAN_FIRE_RL_init = DEF_CAN_FIRE_RL_init;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_pipeline_process) != DEF_CAN_FIRE_RL_pipeline_process)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_pipeline_process, 1u);
	backing.DEF_CAN_FIRE_RL_pipeline_process = DEF_CAN_FIRE_RL_pipeline_process;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_read) != DEF_CAN_FIRE_RL_read)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_read, 1u);
	backing.DEF_CAN_FIRE_RL_read = DEF_CAN_FIRE_RL_read;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_write) != DEF_CAN_FIRE_RL_write)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_write, 1u);
	backing.DEF_CAN_FIRE_RL_write = DEF_CAN_FIRE_RL_write;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_TASK_fopen___d215) != DEF_TASK_fopen___d215)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_fopen___d215, 32u);
	backing.DEF_TASK_fopen___d215 = DEF_TASK_fopen___d215;
      }
      ++num;
      if ((backing.DEF_TASK_fopen___d217) != DEF_TASK_fopen___d217)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_fopen___d217, 32u);
	backing.DEF_TASK_fopen___d217 = DEF_TASK_fopen___d217;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_finish) != DEF_WILL_FIRE_RL_finish)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_finish, 1u);
	backing.DEF_WILL_FIRE_RL_finish = DEF_WILL_FIRE_RL_finish;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_init) != DEF_WILL_FIRE_RL_init)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_init, 1u);
	backing.DEF_WILL_FIRE_RL_init = DEF_WILL_FIRE_RL_init;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_pipeline_process) != DEF_WILL_FIRE_RL_pipeline_process)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_pipeline_process, 1u);
	backing.DEF_WILL_FIRE_RL_pipeline_process = DEF_WILL_FIRE_RL_pipeline_process;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_read) != DEF_WILL_FIRE_RL_read)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_read, 1u);
	backing.DEF_WILL_FIRE_RL_read = DEF_WILL_FIRE_RL_read;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_write) != DEF_WILL_FIRE_RL_write)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_write, 1u);
	backing.DEF_WILL_FIRE_RL_write = DEF_WILL_FIRE_RL_write;
      }
      ++num;
      if ((backing.DEF_b__h30856) != DEF_b__h30856)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h30856, 32u);
	backing.DEF_b__h30856 = DEF_b__h30856;
      }
      ++num;
      if ((backing.DEF_m_out___d242) != DEF_m_out___d242)
      {
	vcd_write_val(sim_hdl, num, DEF_m_out___d242, 32u);
	backing.DEF_m_out___d242 = DEF_m_out___d242;
      }
      ++num;
      if ((backing.DEF_x__h31007) != DEF_x__h31007)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h31007, 32u);
	backing.DEF_x__h31007 = DEF_x__h31007;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_finish, 1u);
      backing.DEF_CAN_FIRE_RL_finish = DEF_CAN_FIRE_RL_finish;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_init, 1u);
      backing.DEF_CAN_FIRE_RL_init = DEF_CAN_FIRE_RL_init;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_pipeline_process, 1u);
      backing.DEF_CAN_FIRE_RL_pipeline_process = DEF_CAN_FIRE_RL_pipeline_process;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_read, 1u);
      backing.DEF_CAN_FIRE_RL_read = DEF_CAN_FIRE_RL_read;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_write, 1u);
      backing.DEF_CAN_FIRE_RL_write = DEF_CAN_FIRE_RL_write;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_TASK_fopen___d215, 32u);
      backing.DEF_TASK_fopen___d215 = DEF_TASK_fopen___d215;
      vcd_write_val(sim_hdl, num++, DEF_TASK_fopen___d217, 32u);
      backing.DEF_TASK_fopen___d217 = DEF_TASK_fopen___d217;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_finish, 1u);
      backing.DEF_WILL_FIRE_RL_finish = DEF_WILL_FIRE_RL_finish;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_init, 1u);
      backing.DEF_WILL_FIRE_RL_init = DEF_WILL_FIRE_RL_init;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_pipeline_process, 1u);
      backing.DEF_WILL_FIRE_RL_pipeline_process = DEF_WILL_FIRE_RL_pipeline_process;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_read, 1u);
      backing.DEF_WILL_FIRE_RL_read = DEF_WILL_FIRE_RL_read;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_write, 1u);
      backing.DEF_WILL_FIRE_RL_write = DEF_WILL_FIRE_RL_write;
      vcd_write_val(sim_hdl, num++, DEF_b__h30856, 32u);
      backing.DEF_b__h30856 = DEF_b__h30856;
      vcd_write_val(sim_hdl, num++, DEF_m_out___d242, 32u);
      backing.DEF_m_out___d242 = DEF_m_out___d242;
      vcd_write_val(sim_hdl, num++, DEF_x__h31007, 32u);
      backing.DEF_x__h31007 = DEF_x__h31007;
    }
}

void MOD_mkTestDriver::vcd_prims(tVCDDumpType dt, MOD_mkTestDriver &backing)
{
  INST_m_doneread.dump_VCD(dt, backing.INST_m_doneread);
  INST_m_in.dump_VCD(dt, backing.INST_m_in);
  INST_m_inited.dump_VCD(dt, backing.INST_m_inited);
  INST_m_out.dump_VCD(dt, backing.INST_m_out);
  INST_m_outstanding.dump_VCD(dt, backing.INST_m_outstanding);
  INST_pipeline_infifo.dump_VCD(dt, backing.INST_pipeline_infifo);
  INST_pipeline_outfifo.dump_VCD(dt, backing.INST_pipeline_outfifo);
  INST_pipeline_r0.dump_VCD(dt, backing.INST_pipeline_r0);
  INST_pipeline_r1.dump_VCD(dt, backing.INST_pipeline_r1);
  INST_pipeline_r2.dump_VCD(dt, backing.INST_pipeline_r2);
  INST_pipeline_r3.dump_VCD(dt, backing.INST_pipeline_r3);
  INST_pipeline_r4.dump_VCD(dt, backing.INST_pipeline_r4);
  INST_pipeline_r5.dump_VCD(dt, backing.INST_pipeline_r5);
  INST_pipeline_r6.dump_VCD(dt, backing.INST_pipeline_r6);
  INST_pipeline_r7.dump_VCD(dt, backing.INST_pipeline_r7);
}

void MOD_mkTestDriver::vcd_submodules(tVCDDumpType dt,
				      unsigned int levels,
				      MOD_mkTestDriver &backing)
{
  INST_pipeline_multiplier.dump_VCD(dt, levels, backing.INST_pipeline_multiplier);
}
